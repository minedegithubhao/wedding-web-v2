{"remainingRequest":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/src/layouts/BasicLayout.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/src/layouts/BasicLayout.vue","mtime":1605568762431},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgovKgogKiBUaGUgZm9sbG93aW5nIHN0eWxlcyBhcmUgYXV0by1hcHBsaWVkIHRvIGVsZW1lbnRzIHdpdGgKICogdHJhbnNpdGlvbj0icGFnZS10cmFuc2l0aW9uIiB3aGVuIHRoZWlyIHZpc2liaWxpdHkgaXMgdG9nZ2xlZAogKiBieSBWdWUuanMuCiAqCiAqIFlvdSBjYW4gZWFzaWx5IHBsYXkgd2l0aCB0aGUgcGFnZSB0cmFuc2l0aW9uIGJ5IGVkaXRpbmcKICogdGhlc2Ugc3R5bGVzLgogKi8KCi5wYWdlLXRyYW5zaXRpb24tZW50ZXIgewogIG9wYWNpdHk6IDA7Cn0KCi5wYWdlLXRyYW5zaXRpb24tbGVhdmUtYWN0aXZlIHsKICBvcGFjaXR5OiAwOwp9CgoucGFnZS10cmFuc2l0aW9uLWVudGVyIC5wYWdlLXRyYW5zaXRpb24tY29udGFpbmVyLAoucGFnZS10cmFuc2l0aW9uLWxlYXZlLWFjdGl2ZSAucGFnZS10cmFuc2l0aW9uLWNvbnRhaW5lciB7CiAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDEuMSk7CiAgdHJhbnNmb3JtOiBzY2FsZSgxLjEpOwp9Cg=="},{"version":3,"sources":["BasicLayout.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"BasicLayout.vue","sourceRoot":"src/layouts","sourcesContent":["<template>\n  <a-layout :class=\"['layout', device]\" id=\"backStageManagement\">\n    <!-- SideMenu -->\n    <a-drawer v-if=\"isMobile()\"\n              placement=\"left\"\n              :wrapClassName=\"`drawer-sider ${navTheme}`\"\n              :closable=\"false\"\n              :visible=\"collapsed\"\n              @close=\"drawerClose\">\n      <side-menu mode=\"inline\"\n                 :menus=\"menus\"\n                 :theme=\"navTheme\"\n                 :collapsed=\"false\"\n                 :collapsible=\"true\"\n                 @menuSelect=\"menuSelect\"></side-menu>\n    </a-drawer>\n\n    <side-menu v-else-if=\"isSideMenu()\"\n               mode=\"inline\"\n               :menus=\"menus\"\n               :theme=\"navTheme\"\n               :collapsed=\"collapsed\"\n               :collapsible=\"true\"></side-menu>\n\n    <a-layout :class=\"[layoutMode, `content-width-${contentWidth}`]\"\n              :style=\"{ paddingLeft: contentPaddingLeft, minHeight: '100vh' }\">\n      <!-- layout header -->\n      <global-header :mode=\"layoutMode\"\n                     :menus=\"menus\"\n                     :all-menus=\"allMenus\"\n                     :top-menu-list=\"topMenuList\"\n                     :all-top-menus=\"allTopMenus\"\n                     :theme=\"navTheme\"\n                     :collapsed=\"collapsed\"\n                     :device=\"device\"\n                     @toggle=\"toggle\"\n                     @handle-select-top-menu=\"handleSelectTopMenu\" />\n\n      <!-- layout content -->\n      <a-layout-content :style=\"{ height: '100%', margin: '24px 24px 0', paddingTop: fixedHeader ? '64px' : '0px' }\">\n        <div :class=\"{ 'page-header-bg-countent': isTopMenu() }\"></div>\n        <div class=\"page-header-bg-box\"\n             v-if=\"isTopMenu()\"></div>\n        <multi-tab v-if=\"multiTab && isSideMenu ()\"\n                   ref=\"multiTab\"\n                   :currentTopMenu=\"currentTopMenu\"></multi-tab>\n        <transition name=\"page-transition\">\n          <route-view />\n        </transition>\n      </a-layout-content>\n\n      <!-- layout footer -->\n      <a-layout-footer>\n        <global-footer />\n      </a-layout-footer>\n\n      <!-- Setting Drawer (show in development mode) -->\n      <setting-drawer v-if=\"!production\"></setting-drawer>\n    </a-layout>\n  </a-layout>\n</template>\n\n<script>\nimport { triggerWindowResizeEvent, getSessionStorage, setSessionStorage } from '@/utils/util'\nimport { mapState, mapActions } from 'vuex'\nimport { mixin, mixinDevice } from '@/utils/mixin'\nimport config from '@/config/defaultSettings'\n\nimport RouteView from './RouteView'\nimport SideMenu from '@/components/Menu/SideMenu'\nimport GlobalHeader from '@/components/GlobalHeader'\nimport GlobalFooter from '@/components/GlobalFooter'\nimport SettingDrawer from '@/components/SettingDrawer'\nimport { updateTheme, updateColorWeak } from '@/components/SettingDrawer/settingConfig'\nimport { convertRoutes } from '@/utils/routeConvert'\nimport Vue from 'vue'\nimport { CURRENT_TOP_MENU } from '@/store/mutation-types'\nimport router from '@/router'\n\nexport default {\n  name: 'BasicLayout',\n  mixins: [mixin, mixinDevice],\n  components: {\n    RouteView,\n    SideMenu,\n    GlobalHeader,\n    GlobalFooter,\n    SettingDrawer\n  },\n  data() {\n    return {\n      production: config.production,\n      collapsed: false,\n      menus: [],\n      allMenus: {}\n    }\n  },\n  computed: {\n    ...mapState({\n      // 动态主路由\n      mainMenu: state => state.permission.addRouters,\n      allTopMenus: state => state.permission.allTopMenus,\n      topMenuList: state => state.permission.topMenuList\n    }),\n    currentTopMenu: function () {\n      for (let i = 0; i < this.topMenuList.length; i++) {\n        if (`${this.topMenuList[i].id}` === `${getSessionStorage(CURRENT_TOP_MENU)}`) {\n          return this.topMenuList[i]\n        }\n      }\n      this.$message.error('没有找到对应的主菜单项')\n      return {}\n    },\n    contentPaddingLeft() {\n      if (!this.fixSidebar || this.isMobile() || this.layoutMode === 'topmenu') {\n        return '0'\n      }\n      if (this.sidebarOpened) {\n        return '256px'\n      }\n      return '80px'\n    }\n  },\n  watch: {\n    sidebarOpened(val) {\n      this.collapsed = !val\n    }\n  },\n  created() {\n    // const routes = convertRoutes(this.mainMenu[getSessionStorage(CURRENT_TOP_MENU)].find(item => item.path === '/'))\n    // this.menus = (routes && routes.children) || []\n\n    const _this = this\n    const allRoutes = {}\n    Object.keys(this.mainMenu).forEach(topMenuId => {\n      const routes = convertRoutes(this.mainMenu[topMenuId].find(item => item.path === '/'))\n      if (`${topMenuId}` === `${getSessionStorage(CURRENT_TOP_MENU)}`) {\n        _this.menus = (routes && routes.children) || []\n      }\n      allRoutes[topMenuId] = (routes && routes.children) || []\n    })\n    this.allMenus = allRoutes\n    this.collapsed = !this.sidebarOpened\n  },\n  mounted() {\n    updateTheme(this.primaryColor)\n    updateColorWeak(this.colorWeak)\n    const userAgent = navigator.userAgent\n    if (userAgent.indexOf('Edge') > -1) {\n      this.$nextTick(() => {\n        this.collapsed = !this.collapsed\n        setTimeout(() => {\n          this.collapsed = !this.collapsed\n        }, 16)\n      })\n    }\n  },\n  methods: {\n    ...mapActions(['setSidebar', 'GenerateRoutes']),\n    toggle() {\n      this.collapsed = !this.collapsed\n      this.setSidebar(!this.collapsed)\n      triggerWindowResizeEvent()\n    },\n    paddingCalc() {\n      let left = ''\n      if (this.sidebarOpened) {\n        left = this.isDesktop() ? '256px' : '80px'\n      } else {\n        left = (this.isMobile() && '0') || (this.fixSidebar && '80px') || '0'\n      }\n      return left\n    },\n    menuSelect() {\n      // if (!this.isDesktop()) {\n      //   this.collapsed = false\n      // }\n    },\n    drawerClose() {\n      this.collapsed = false\n    },\n    handleSelectTopMenu(topMenu) {\n      const topMenuId = topMenu.id\n      setSessionStorage(CURRENT_TOP_MENU, topMenuId)\n      if (this.mainMenu[topMenuId] && this.mainMenu[topMenuId].length) {\n        const routes = convertRoutes(this.mainMenu[topMenuId].find(item => item.path === '/'))\n        this.menus = (routes && routes.children) || []\n        this.$nextTick(() => {\n          if (`${topMenu.multiTab}` === 'true') {\n            this.$refs.multiTab.indexPage = {\n              fullPath: topMenu.component,\n              name: topMenu.code,\n              meta: { title: topMenu.name },\n              closable: false\n            }\n          } else {\n            this.$router.push({ path: topMenu.component })\n          }\n        })\n        // this.$router.push({ name: 'dashboard' })\n      } else {\n        const _this = this\n        // 调用 vuex 的 从后端获取用户的路由菜单，动态添加可访问路由表\n        this.GenerateRoutes({ currentTopMenu: topMenuId }).then(() => {\n          // 把已获取到的路由菜单加入到路由表中\n          const route = _this.mainMenu\n          let routeMap = []\n          for (const key in route) {\n            routeMap = routeMap.concat(route[key])\n          }\n          router.addRoutes(routeMap)\n          const routes = convertRoutes(_this.mainMenu[topMenuId].find(item => item.path === '/'))\n          _this.menus = (routes && routes.children) || []\n          _this.$nextTick(() => {\n            if (`${topMenu.multiTab}` === 'true') {\n              _this.$refs.multiTab.indexPage = {\n                fullPath: topMenu.component,\n                name: topMenu.code,\n                meta: { title: topMenu.source },\n                closable: false\n              }\n            } else {\n              _this.$router.push({ path: topMenu.component })\n            }\n          })\n          // this.$router.push({ name: 'dashboard' })\n        })\n      }\n      // 切换导航模式及其他系统配置\n      if (topMenu.layoutMode) {\n        this.$store.dispatch('ToggleLayoutMode', topMenu.layoutMode)\n      }\n      if (topMenu.multiTab !== undefined && `${topMenu.multiTab}` !== `${this.multiTab}`) {\n        if (`${topMenu.multiTab}` === 'true') {\n          this.$store.dispatch('ToggleMultiTab', true)\n        } else {\n          this.$store.dispatch('ToggleMultiTab', false)\n        }\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"less\">\n/*\n * The following styles are auto-applied to elements with\n * transition=\"page-transition\" when their visibility is toggled\n * by Vue.js.\n *\n * You can easily play with the page transition by editing\n * these styles.\n */\n\n.page-transition-enter {\n  opacity: 0;\n}\n\n.page-transition-leave-active {\n  opacity: 0;\n}\n\n.page-transition-enter .page-transition-container,\n.page-transition-leave-active .page-transition-container {\n  -webkit-transform: scale(1.1);\n  transform: scale(1.1);\n}\n</style>\n"]}]}