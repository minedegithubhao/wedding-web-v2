{"remainingRequest":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/src/components/pts/Upload/VenusUpload.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/src/components/pts/Upload/VenusUpload.vue","mtime":1605568762425},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["VenusUpload.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"VenusUpload.vue","sourceRoot":"src/components/pts/Upload","sourcesContent":["<template>\n  <a-upload :list-type=\"listType || 'text'\"\n            :multiple=\"multiple\"\n            :accept=\"accept\"\n            :method=\"method\"\n            :directory=\"directory\"\n            :customRequest=\"customRequest\"\n            :data=\"data\"\n            :disabled=\"disabled\"\n            :name=\"name\"\n            :previewFile=\"previewFile\"\n            :showUploadList=\"showUploadList\"\n            :supportServerRender=\"supportServerRender\"\n            :withCredentials=\"withCredentials\"\n            :openFileDialogOnClick=\"openFileDialogOnClick\"\n            :transformFile=\"transformFile\"\n            :headers=\"headers\"\n            :fileList=\"sFileList\"\n            :action=\"action || defaultAction\"\n            @change=\"fileChange\"\n            @download=\"download\"\n            @preview=\"filePreview\"\n            @reject=\"reject\"\n            :beforeUpload=\"beforeUpload\"\n            :remove=\"fileDelete\"\n            class=\"venus-upload\">\n    <a-button v-if=\"!maxLength || (maxLength && sFileList.length < maxLength)\"\n              :disabled=\"disabled\"\n              v-show=\"!disabledUpload\">\n      <a-icon type=\"upload\" />点击上传\n      <!-- <a-input :value=\"UUID\" @change=\"handleChange\" class=\"busId\"></a-input> -->\n    </a-button>\n  </a-upload>\n</template>\n\n<script>\n/**\n *  作者：姚正超\n *  描述：V1.0版本，请勿随意乱更改组件\n *  日期：2020年5月9日\n */\nimport { Upload as U } from 'ant-design-vue'\nimport { UUIDTSysSerialNumber } from '@/api/pts/sys/TSysSerialNumber'\nimport { ACCESS_TOKEN } from '@/store/mutation-types'\nimport Vue from 'vue'\nimport { downloadTSysFile, initTSysFileList, delTSysFile } from '@/api/pts/sys/TSysFile'\nimport prefix from '@/config/prefix'\n\nexport default {\n  name: 'VenusUpload',\n  model: {\n    prop: 'value',\n    event: 'change'\n  },\n  props: Object.assign({}, U.props, {\n    headers: {\n      type: Object,\n      default: function () {\n        return { token: Vue.ls.get(ACCESS_TOKEN) }\n      }\n    },\n    action: {\n      type: String,\n      default: ''\n    },\n    // 文件类型限制\n    acceptType: {\n      type: String,\n      default: '*'\n    },\n    // 文件大小限制\n    maxSize: {\n      type: Number,\n      default: undefined\n    },\n    // 最大列表长度，如上传多个文件此属性必须存在\n    maxLength: {\n      type: Number,\n      default: undefined\n    },\n    // 由于antd => Form表单组件限制所加属性，无需关注\n    value: {\n      type: String,\n      default: ''\n    },\n    // 是否上传到静态资源开放路径\n    isOpen: {\n      type: [Boolean, String],\n      default: false\n    },\n    // 上传成功的回调方法\n    uploadSuccess: {\n      // type: Function\n    },\n    // 上传成功的回调方法\n    uploadError: {\n      // type: Function\n    },\n    disabledUpload: {\n      type: Boolean,\n      default: false\n    }\n  }),\n  data () {\n    const value = !this.value || this.value === 0 || this.value === '0' ? '' : this.value\n    if (this.disabledUpload && this.disabled && this.value && this.value !== '0') {\n      this.UUID = value\n      this.sFileList = []\n      this.initUpload()\n    }\n    return {\n      sFileList: [],\n      UUID: value\n      // busId: value\n    }\n  },\n  computed: {\n    defaultAction: function () {\n      const busId = this.UUID || this.value\n      return process.env.VUE_APP_API_BASE_URL + '/pts/sys/TSysFile/upload?busId=' + busId + '&isOpen=' + this.matchOpen\n    },\n    matchOpen: function () {\n      return this.isOpen === true || this.isOpen === 'true' ? 1 : 0\n    }\n  },\n  // async mounted() {\n  //   this.UUID = this.value\n  // },\n  beforeDestroy () {\n    this.sFileList = []\n  },\n  watch: {\n    value (val = '') {\n      if ((!val || val === '0') && !this.disabledUpload) {\n        this.sFileList = []\n        this.handleUUID()\n      } else if ((this.UUID && this.UUID !== val) || !this.UUID) {\n        this.UUID = val\n        this.sFileList = []\n        this.initUpload()\n      }\n    }\n  },\n  created () { },\n  methods: {\n    triggerChange (e) {\n      // Should provide an event to pass value to Form.\n      this.$emit('change', this.UUID)\n    },\n    async handleUUID () {\n      await UUIDTSysSerialNumber().then(res => {\n        if (res.code === 0) {\n          this.UUID = res.data\n        } else {\n          console.log(new Error('获取busId失败'))\n          this.$message.error('上传组件出现意外错误')\n        }\n      })\n    },\n    handleChange (e) {\n      this.$emit('change', e.target.value)\n    },\n    fileChange ({ file, fileList }) {\n      if (file.status !== 'uploading') {\n      }\n      if (file.status === 'done') {\n        // this.initUpload()\n        if (file.response.code === 0) {\n          fileList.map(el => {\n            if (el.uid === file.uid) {\n              el['linkProps'] = { download: 'current' }\n            }\n            return el\n          })\n          this.$message.success(`${file.name} 文件上传成功`)\n          this.$emit('success', file.response)\n          // }\n        } else {\n          fileList.map(el => {\n            if (el.uid === file.uid) {\n              el['linkProps'] = { download: 'current' }\n            }\n            return el\n          })\n          this.$message.error(`${file.name} 文件上传失败` + file.response.msg)\n          this.$emit('error', file.response)\n        }\n      } else if (file.status === 'error') {\n        fileList.map(el => {\n          if (el.uid === file.uid) {\n            el['linkProps'] = { download: 'current' }\n          }\n          return el\n        })\n        this.$message.error(`${file.name} 文件上传失败`)\n        this.$emit('error', file.response)\n      }\n      if (file.status !== undefined) {\n        this.sFileList = fileList\n        this.triggerChange()\n      }\n    },\n    filePreview (file) {\n      if (file.status === 'done') {\n        if (file.linkProps.download === 'error') {\n          this.$message.error(`${file.name} 文件上传失败，无法下载`)\n        } else {\n          downloadTSysFile({ fileId: file.response.fileId, delete: false })\n        }\n      } else {\n        this.$message.error(`${file.name} 文件下载出现错误`)\n      }\n    },\n    initUpload () {\n      const self = this\n      initTSysFileList({ busId: this.value }).then(res => {\n        if (res.code === 0) {\n          // console.log('文件列表初始化开始-------------')\n          if (self.listType === 'text' && this.matchOpen === 1) {\n            res.data.some((item, i) => {\n              self.sFileList.push({\n                uid: item.id,\n                name: <a-tooltip><template slot=\"title\">{'点击下载文件'}</template>{item.fileRealname}</a-tooltip>,\n                status: 'done',\n                response: { fileId: item.id },\n                linkProps: { download: 'current' }\n              })\n            })\n          } else {\n            res.data.some((item, i) => {\n              self.sFileList.push({\n                uid: item.id,\n                name: <a-tooltip><template slot=\"title\">{'点击下载文件'}</template>{item.fileRealname}</a-tooltip>,\n                status: 'done',\n                url: self.defaultAction,\n                thumbUrl: prefix.OPEN_URL_PREFIX + item.filePath,\n                response: { fileId: item.id },\n                linkProps: { download: 'current' }\n              })\n            })\n          }\n          // res.data.some((item, i) => {\n          //   self.sFileList.push({\n          //     uid: item.id,\n          //     name: item.fileRealname,\n          //     status: 'done',\n          //     response: { fileId: item.id },\n          //     linkProps: { download: 'current' }\n          //   })\n          // })\n        }\n      })\n    },\n    async fileDelete (info) {\n      // 删除\n      await delTSysFile({ fileId: info.response.fileId, delete: true })\n        .then(res => {\n          if (res.code === 0) {\n            this.sFileList = this.sFileList.filter(file => file.response.fileId !== info.response.fileId)\n            this.$message.success('删除成功')\n          } else {\n            this.$message.error(res.msg || '删除失败')\n          }\n        })\n        .catch(() => {\n          this.$message.error('系统错误，请稍后再试')\n        })\n        .finally(() => {\n        })\n    },\n    beforeUpload (file, fileList) {\n      const isAcceptType = this.typeMatch(file.type)\n      if (!isAcceptType) {\n        this.$message.error(`文件类型限制为 ${this.acceptType}!`)\n      }\n      const lessThanMaxSize = !this.maxSize || (this.maxSize && file.size / 1024 / 1024 < this.maxSize)\n      if (!lessThanMaxSize) {\n        this.$message.error(`文件大小限制为 ${this.maxSize}MB!`)\n      }\n      return isAcceptType && lessThanMaxSize\n    },\n    typeMatch (fileType) {\n      if (this.acceptType === '*' || this.acceptType === '*/*') {\n        return true\n      }\n      const accept = this.acceptType.split(',')\n      const type = fileType.indexOf('/') > -1 ? fileType.split('/')[1] : fileType\n      for (let i = 0; i < accept.length; i++) {\n        if (accept[i] === type) {\n          return true\n        }\n      }\n      return false\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.busId {\n  display: none;\n  width: 0px;\n  height: 0px;\n}\n.venus-upload {\n  cursor: pointer;\n}\n.ant-upload .ant-upload-list .ant-upload-list-item .ant-upload-list-item {\n  height: 40px;\n}\n// .venus-upload {\n//   .ant-upload-list-item-card-actions {\n//     opacity: 1;\n//   }\n// }\n</style>\n"]}]}