{"remainingRequest":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/src/views/monitor/OperLogList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/src/views/monitor/OperLogList.vue","mtime":1605786448167},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IFNUYWJsZSB9IGZyb20gJ0AvY29tcG9uZW50cycKLy8gaW1wb3J0IHsgZ2V0T3BlckxvZ0xpc3QsIGRlbE9wZXJMb2csIGNsZWFuT3BlckxvZywgb3BlckxvZ0V4cG9ydCB9IGZyb20gJ0AvYXBpL21vbml0b3InCmltcG9ydCB7IGNsZWFuT3BlckxvZywgZGVsT3BlckxvZywgZ2V0T3BlckxvZ0xpc3QsIG9wZXJMb2dFeHBvcnQgfSBmcm9tICdAL2FwaS9tb25pdG9yJwppbXBvcnQgT3BlckxvZ01vZGFsIGZyb20gJy4vbW9kdWxlcy9PcGVyTG9nTW9kYWwudnVlJwppbXBvcnQgeyBnZXREaWN0QXJyYXkgfSBmcm9tICdAL3V0aWxzL2RpY3QnCmltcG9ydCB7IGV4cG9ydEV4Y2VsIH0gZnJvbSAnQC91dGlscy9kb3dubG9hZCcKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdUYWJsZUxpc3QnLAogIGNvbXBvbmVudHM6IHsKICAgIFNUYWJsZSwKICAgIE9wZXJMb2dNb2RhbAogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHZpc2libGU6IGZhbHNlLAogICAgICBsYWJlbENvbDogewogICAgICAgIHhzOiB7IHNwYW46IDI0IH0sCiAgICAgICAgc206IHsgc3BhbjogNSB9CiAgICAgIH0sCiAgICAgIHdyYXBwZXJDb2w6IHsKICAgICAgICB4czogeyBzcGFuOiAyNCB9LAogICAgICAgIHNtOiB7IHNwYW46IDE2IH0KICAgICAgfSwKICAgICAgZm9ybTogdGhpcy4kZm9ybS5jcmVhdGVGb3JtKHRoaXMpLAogICAgICBtZGw6IHt9LAogICAgICBwZXJtaXNzaW9uczogW10sCiAgICAgIC8vIOmrmOe6p+aQnOe0oiDlsZXlvIAv5YWz6ZetCiAgICAgIGFkdmFuY2VkOiBmYWxzZSwKICAgICAgLy8g5p+l6K+i5Y+C5pWwCiAgICAgIHF1ZXJ5UGFyYW06IHt9LAogICAgICAvLyDooajlpLQKICAgICAgY29sdW1uczogWwogICAgICAgIHsKICAgICAgICAgIHRpdGxlOiAn5pel5b+X57yW5Y+3JywKICAgICAgICAgIGRhdGFJbmRleDogJ29wZXJJZCcKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIHRpdGxlOiAn57O757uf5qih5Z2XJywKICAgICAgICAgIGRhdGFJbmRleDogJ3RpdGxlJwogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgdGl0bGU6ICfmk43kvZznsbvlnosnLAogICAgICAgICAgZGF0YUluZGV4OiAnYnVzaW5lc3NUeXBlJywKICAgICAgICAgIHNjb3BlZFNsb3RzOiB7IGN1c3RvbVJlbmRlcjogJ2J1c2luZXNzVHlwZScgfQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgdGl0bGU6ICfmk43kvZzkurrlkZgnLAogICAgICAgICAgZGF0YUluZGV4OiAnb3Blck5hbWUnCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICB0aXRsZTogJ+S4u+acuicsCiAgICAgICAgICBkYXRhSW5kZXg6ICdvcGVySXAnCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICB0aXRsZTogJ+aTjeS9nOWcsOeCuScsCiAgICAgICAgICBkYXRhSW5kZXg6ICdvcGVyTG9jYXRpb24nCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICB0aXRsZTogJ+eKtuaAgScsCiAgICAgICAgICBkYXRhSW5kZXg6ICdzdGF0dXMnLAogICAgICAgICAgc2NvcGVkU2xvdHM6IHsgY3VzdG9tUmVuZGVyOiAnc3RhdHVzJyB9CiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICB0aXRsZTogJ+aTjeS9nOaXtumXtCcsCiAgICAgICAgICBkYXRhSW5kZXg6ICdvcGVyVGltZScsCiAgICAgICAgICBzb3J0ZXI6IHRydWUKICAgICAgICB9LCB7CiAgICAgICAgICB0aXRsZTogJ+aTjeS9nCcsCiAgICAgICAgICB3aWR0aDogJzEwMHB4JywKICAgICAgICAgIGRhdGFJbmRleDogJ2FjdGlvbicsCiAgICAgICAgICBhbGlnbjogJ2NlbnRlcicsCiAgICAgICAgICBzY29wZWRTbG90czogeyBjdXN0b21SZW5kZXI6ICdhY3Rpb24nIH0KICAgICAgICB9CiAgICAgIF0sCiAgICAgIHJhbmdlOiBudWxsLAogICAgICAvLyDliqDovb3mlbDmja7mlrnms5Ug5b+F6aG75Li6IFByb21pc2Ug5a+56LGhCiAgICAgIGxvYWREYXRhOiBwYXJhbWV0ZXIgPT4gewogICAgICAgIHJldHVybiBnZXRPcGVyTG9nTGlzdChPYmplY3QuYXNzaWduKHBhcmFtZXRlciwgdGhpcy5xdWVyeVBhcmFtKSkKICAgICAgfSwKICAgICAgb3BlclR5cGVNYXA6IHt9LAogICAgICBidXNpbmVzc1R5cGVzOiBbXSwKICAgICAgc2VsZWN0ZWRSb3dLZXlzOiBbXSwKICAgICAgc2VsZWN0ZWRSb3dzOiBbXQogICAgfQogIH0sCiAgZmlsdGVyczogewogICAgb3BlclR5cGVGaWx0ZXIodHlwZSwgb3BlclR5cGVNYXApIHsKICAgICAgcmV0dXJuIG9wZXJUeXBlTWFwW3R5cGVdLnRleHQKICAgIH0sCiAgICBzdGF0dXNGaWx0ZXIoc3RhdHVzKSB7CiAgICAgIGNvbnN0IHN0YXR1c01hcCA9IHsKICAgICAgICAnMSc6ICflpLHotKUnLAogICAgICAgICcwJzogJ+aIkOWKnycKICAgICAgfQogICAgICByZXR1cm4gc3RhdHVzTWFwW3N0YXR1c10KICAgIH0sCiAgICBzdGF0dXNUeXBlRmlsdGVyKHN0YXR1cykgewogICAgICBjb25zdCBzdGF0dXNNYXAgPSB7CiAgICAgICAgJzEnOiAnZGVmYXVsdCcsCiAgICAgICAgJzAnOiAnc3VjY2VzcycKICAgICAgfQogICAgICByZXR1cm4gc3RhdHVzTWFwW3N0YXR1c10KICAgIH0KICB9LAogIGJlZm9yZUNyZWF0ZSgpIHsKCiAgfSwKICBjcmVhdGVkKCkgewogICAgLy8g5a2X5YW45Lik56eN55So5rOV77yM5ZCE5pyJ5LyY57y654K5CiAgICAvLyBvcGVyVHlwZU1hcCA9IGF3YWl0IGdldERpY3RNYXAoJ3N5c19vcGVyX3R5cGUnKQogICAgLy8gdGhpcy5vcGVyVHlwZU1hcCA9IG9wZXJUeXBlTWFwCiAgICAvLyB0aGlzLm9wZXJUeXBlTWFwLmZvckVhY2goKHZhbHVlLCBrZXksIG15bWFwKSA9PiB7CiAgICAvLyAgIHRoaXMuYnVzaW5lc3NUeXBlcy5wdXNoKHsgY29kZToga2V5LCBsYWJlbDogdmFsdWUgfSkKICAgIC8vIH0pCiAgICBnZXREaWN0QXJyYXkoJ3N5c19vcGVyX3R5cGUnKQogICAgICAudGhlbihyZXMgPT4gewogICAgICAgIGNvbnN0IG9wZXJUeXBlTWFwID0ge30KICAgICAgICB0aGlzLmJ1c2luZXNzVHlwZXMgPSByZXMKICAgICAgICByZXMubWFwKGQgPT4gewogICAgICAgICAgb3BlclR5cGVNYXBbZC5kaWN0VmFsdWVdID0geyB0ZXh0OiBkLmRpY3RMYWJlbCB9CiAgICAgICAgfSkKICAgICAgICB0aGlzLm9wZXJUeXBlTWFwID0gb3BlclR5cGVNYXAKICAgICAgfSkKICB9LAogIG1ldGhvZHM6IHsKICAgIG9uU2VsZWN0Q2hhbmdlKHNlbGVjdGVkUm93S2V5cywgc2VsZWN0ZWRSb3dzKSB7CiAgICAgIHRoaXMuc2VsZWN0ZWRSb3dLZXlzID0gc2VsZWN0ZWRSb3dLZXlzCiAgICAgIHRoaXMuc2VsZWN0ZWRSb3dzID0gc2VsZWN0ZWRSb3dzCiAgICB9LAogICAgaGFuZGxlRGV0YWlsKHJlY29yZCkgewogICAgICB0aGlzLiRyZWZzLm1vZGFsLmRldGFpbChyZWNvcmQpCiAgICB9LAogICAgaGFuZGxlT2soKSB7CiAgICAgIHRoaXMuJHJlZnMudGFibGUucmVmcmVzaCh0cnVlKQogICAgfSwKICAgIGV4cG9ydEV4Y2VsKCkgewogICAgICBleHBvcnRFeGNlbChvcGVyTG9nRXhwb3J0LCB0aGlzLnF1ZXJ5UGFyYW0pCiAgICB9LAogICAgZGVsQnlJZHMoaWRzKSB7CiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZgogICAgICBkZWxPcGVyTG9nKHsgaWRzOiBpZHMuam9pbignLCcpIH0pLnRoZW4ocmVzID0+IHsKICAgICAgICBpZiAocmVzLmNvZGUgPT09IDApIHsKICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcyhg5Yig6Zmk5oiQ5YqfYCkKICAgICAgICAgIHRoaXMuaGFuZGxlT2soKQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKHJlcy5tc2cpCiAgICAgICAgfQogICAgICAgIHRoaXMuJHJlZnMudGFibGUuY2xlYXJTZWxlY3RlZCgpCiAgICAgIH0pCiAgICB9LAogICAgY2xlYW4oKSB7CiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZgogICAgICBjbGVhbk9wZXJMb2coKS50aGVuKHJlcyA9PiB7CiAgICAgICAgaWYgKHJlcy5jb2RlID09PSAwKSB7CiAgICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoYOa4heepuuaIkOWKn2ApCiAgICAgICAgICB0aGlzLmhhbmRsZU9rKCkKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcihyZXMubXNnKQogICAgICAgIH0KICAgICAgfSkKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICAvKgogICAgICAnc2VsZWN0ZWRSb3dzJzogZnVuY3Rpb24gKHNlbGVjdGVkUm93cykgewogICAgICAgIHRoaXMubmVlZFRvdGFsTGlzdCA9IHRoaXMubmVlZFRvdGFsTGlzdC5tYXAoaXRlbSA9PiB7CiAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICAuLi5pdGVtLAogICAgICAgICAgICB0b3RhbDogc2VsZWN0ZWRSb3dzLnJlZHVjZSggKHN1bSwgdmFsKSA9PiB7CiAgICAgICAgICAgICAgcmV0dXJuIHN1bSArIHZhbFtpdGVtLmRhdGFJbmRleF0KICAgICAgICAgICAgfSwgMCkKICAgICAgICAgIH0KICAgICAgICB9KQogICAgICB9CiAgICAgICovCiAgfQp9Cg=="},{"version":3,"sources":["OperLogList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"OperLogList.vue","sourceRoot":"src/views/monitor","sourcesContent":["<template>\n  <a-card :bordered=\"false\">\n    <div class=\"table-page-search-wrapper\">\n      <a-form layout=\"inline\">\n        <a-row :gutter=\"48\">\n          <a-col :md=\"5\"\n                 :sm=\"15\">\n            <a-form-item label=\"操作人员\">\n              <a-input placeholder=\"请输入\"\n                       v-model=\"queryParam.operName\" />\n            </a-form-item>\n          </a-col>\n          <a-col :md=\"4\"\n                 :sm=\"12\">\n            <a-form-item label=\"操作类型\">\n              <a-select placeholder=\"请选择\"\n                        v-model=\"queryParam.businessType\"\n                        default-value=\"0\">\n                <a-select-option :value=\"''\">全部</a-select-option>\n                <a-select-option v-for=\"(b, index) in businessTypes\"\n                                 :key=\"index\"\n                                 :value=\"b.dictValue\">{{ b.dictLabel }}</a-select-option>\n              </a-select>\n            </a-form-item>\n          </a-col>\n          <a-col :md=\"4\"\n                 :sm=\"12\">\n            <a-form-item label=\"操作状态\">\n              <a-select placeholder=\"请选择\"\n                        v-model=\"queryParam.status\"\n                        default-value=\"0\">\n                <a-select-option :value=\"''\">全部</a-select-option>\n                <a-select-option :value=\"0\">成功</a-select-option>\n                <a-select-option :value=\"1\">失败</a-select-option>\n              </a-select>\n            </a-form-item>\n          </a-col>\n          <a-col :md=\"6\"\n                 :sm=\"18\">\n            <a-form-item label=\"操作时间\">\n              <a-range-picker v-model=\"range\" />\n            </a-form-item>\n          </a-col>\n          <a-col :md=\"5\"\n                 :sm=\"15\">\n            <span class=\"table-page-search-submitButtons\">\n              <a-button type=\"primary\"\n                        @click=\"$refs.table.refresh(true)\">查询</a-button>\n              <a-button style=\"margin-left: 8px\"\n                        @click=\"() => queryParam = {}\">重置</a-button>\n            </span>\n          </a-col>\n        </a-row>\n      </a-form>\n    </div>\n    <div class=\"table-operator\">\n      <!-- <a-popconfirm v-has=\"'monitor:operlog:remove'\" title=\"确认清空吗？\" @confirm=\"clean\">\n        <a-icon slot=\"icon\" type=\"question-circle-o\" style=\"color: red\" />\n        <a-button type=\"danger\" ghost icon=\"close\">清空</a-button>\n      </a-popconfirm> -->\n      <a-button type=\"primary\"\n                icon=\"export\"\n                @click=\"exportExcel()\">导出</a-button>\n      <!-- <a-dropdown v-has=\"'monitor:operlog:remove'\" v-if=\"selectedRowKeys.length > 0\">\n        <a-button type=\"danger\" icon=\"delete\" @click=\"delByIds(selectedRowKeys)\">删除</a-button>\n      </a-dropdown> -->\n    </div>\n    <s-table size=\"default\"\n             ref=\"table\"\n             rowKey=\"operId\"\n             :rowSelection=\"{selectedRowKeys: selectedRowKeys, onChange: onSelectChange}\"\n             :columns=\"columns\"\n             :data=\"loadData\"\n             :rangPicker=\"range\"\n             defaultSort=\"operTime\"\n             v-if=\"operTypeMap\">\n      <span slot=\"businessType\"\n            slot-scope=\"text\">\n        {{ text | operTypeFilter(operTypeMap) }}\n      </span>\n      <span slot=\"status\"\n            slot-scope=\"text\">\n        <a-badge :status=\"text | statusTypeFilter\"\n                 :text=\"text | statusFilter\" />\n      </span>\n      <span slot=\"action\"\n            slot-scope=\"text, record\">\n        <!-- 详细 -->\n        <a-icon type=\"snippets\"\n                class=\"icon-action other\"\n                style=\"--content: '\\8be6\\7ec6'\"\n                @click=\"handleDetail(record)\" />\n      </span>\n    </s-table>\n    <operLog-modal ref=\"modal\"\n                   :operTypeMap=\"operTypeMap\"\n                   v-if=\"operTypeMap\" />\n  </a-card>\n</template>\n\n<script>\nimport { STable } from '@/components'\n// import { getOperLogList, delOperLog, cleanOperLog, operLogExport } from '@/api/monitor'\nimport { cleanOperLog, delOperLog, getOperLogList, operLogExport } from '@/api/monitor'\nimport OperLogModal from './modules/OperLogModal.vue'\nimport { getDictArray } from '@/utils/dict'\nimport { exportExcel } from '@/utils/download'\nexport default {\n  name: 'TableList',\n  components: {\n    STable,\n    OperLogModal\n  },\n  data() {\n    return {\n      visible: false,\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      },\n      form: this.$form.createForm(this),\n      mdl: {},\n      permissions: [],\n      // 高级搜索 展开/关闭\n      advanced: false,\n      // 查询参数\n      queryParam: {},\n      // 表头\n      columns: [\n        {\n          title: '日志编号',\n          dataIndex: 'operId'\n        },\n        {\n          title: '系统模块',\n          dataIndex: 'title'\n        },\n        {\n          title: '操作类型',\n          dataIndex: 'businessType',\n          scopedSlots: { customRender: 'businessType' }\n        },\n        {\n          title: '操作人员',\n          dataIndex: 'operName'\n        },\n        {\n          title: '主机',\n          dataIndex: 'operIp'\n        },\n        {\n          title: '操作地点',\n          dataIndex: 'operLocation'\n        },\n        {\n          title: '状态',\n          dataIndex: 'status',\n          scopedSlots: { customRender: 'status' }\n        },\n        {\n          title: '操作时间',\n          dataIndex: 'operTime',\n          sorter: true\n        }, {\n          title: '操作',\n          width: '100px',\n          dataIndex: 'action',\n          align: 'center',\n          scopedSlots: { customRender: 'action' }\n        }\n      ],\n      range: null,\n      // 加载数据方法 必须为 Promise 对象\n      loadData: parameter => {\n        return getOperLogList(Object.assign(parameter, this.queryParam))\n      },\n      operTypeMap: {},\n      businessTypes: [],\n      selectedRowKeys: [],\n      selectedRows: []\n    }\n  },\n  filters: {\n    operTypeFilter(type, operTypeMap) {\n      return operTypeMap[type].text\n    },\n    statusFilter(status) {\n      const statusMap = {\n        '1': '失败',\n        '0': '成功'\n      }\n      return statusMap[status]\n    },\n    statusTypeFilter(status) {\n      const statusMap = {\n        '1': 'default',\n        '0': 'success'\n      }\n      return statusMap[status]\n    }\n  },\n  beforeCreate() {\n\n  },\n  created() {\n    // 字典两种用法，各有优缺点\n    // operTypeMap = await getDictMap('sys_oper_type')\n    // this.operTypeMap = operTypeMap\n    // this.operTypeMap.forEach((value, key, mymap) => {\n    //   this.businessTypes.push({ code: key, label: value })\n    // })\n    getDictArray('sys_oper_type')\n      .then(res => {\n        const operTypeMap = {}\n        this.businessTypes = res\n        res.map(d => {\n          operTypeMap[d.dictValue] = { text: d.dictLabel }\n        })\n        this.operTypeMap = operTypeMap\n      })\n  },\n  methods: {\n    onSelectChange(selectedRowKeys, selectedRows) {\n      this.selectedRowKeys = selectedRowKeys\n      this.selectedRows = selectedRows\n    },\n    handleDetail(record) {\n      this.$refs.modal.detail(record)\n    },\n    handleOk() {\n      this.$refs.table.refresh(true)\n    },\n    exportExcel() {\n      exportExcel(operLogExport, this.queryParam)\n    },\n    delByIds(ids) {\n      // eslint-disable-next-line no-undef\n      delOperLog({ ids: ids.join(',') }).then(res => {\n        if (res.code === 0) {\n          this.$message.success(`删除成功`)\n          this.handleOk()\n        } else {\n          this.$message.error(res.msg)\n        }\n        this.$refs.table.clearSelected()\n      })\n    },\n    clean() {\n      // eslint-disable-next-line no-undef\n      cleanOperLog().then(res => {\n        if (res.code === 0) {\n          this.$message.success(`清空成功`)\n          this.handleOk()\n        } else {\n          this.$message.error(res.msg)\n        }\n      })\n    }\n  },\n  watch: {\n    /*\n      'selectedRows': function (selectedRows) {\n        this.needTotalList = this.needTotalList.map(item => {\n          return {\n            ...item,\n            total: selectedRows.reduce( (sum, val) => {\n              return sum + val[item.dataIndex]\n            }, 0)\n          }\n        })\n      }\n      */\n  }\n}\n</script>\n"]}]}