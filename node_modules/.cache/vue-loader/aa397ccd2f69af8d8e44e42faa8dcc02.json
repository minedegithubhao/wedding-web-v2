{"remainingRequest":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/src/components/pts/WebShell/MultiTab.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/src/components/pts/WebShell/MultiTab.vue","mtime":1605568762426},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouc2hlbGwtdGFiIHsKICB0cmFuc2l0aW9uOiBhbGwgMC40cyBlYXNlIDBzOwogIC5zaGVsbC10YWItd3JhcHBlciB7CiAgICAuYW50LXRhYnMtYmFyIHsKICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogIzYxNjE2MTsKICAgICAgLmFudC10YWJzLW5hdi1jb250YWluZXIgewogICAgICAgIGhlaWdodDogMzVweDsKICAgICAgICAuYW50LXRhYnMtbmF2LXdyYXAgewogICAgICAgICAgLmFudC10YWJzLW5hdiB7CiAgICAgICAgICAgIC5hbnQtdGFicy10YWIgewogICAgICAgICAgICAgIGhlaWdodDogMzRweDsKICAgICAgICAgICAgICBsaW5lLWhlaWdodDogMzNweDsKICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAjZTVlNWU1OwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["MultiTab.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MultiTab.vue","sourceRoot":"src/components/pts/WebShell","sourcesContent":["<script>\nimport Terminal from './terminal'\nimport { cloneDeep } from 'lodash'\nimport { createUuid } from '@/utils/util.js'\n\nexport default {\n  name: 'ShellMultiTab',\n  props: {\n    showDrawer: {\n      type: Boolean,\n      default: false\n    },\n    drawerWidth: {\n      type: String,\n      default: '185px'\n    }\n  },\n  data() {\n    return {\n      keyList: [],\n      pages: [],\n      activeKey: '',\n      indexPage: {}\n    }\n  },\n  created() {\n  },\n  methods: {\n    open(session) {\n      const link = cloneDeep(session)\n      const pages = this.pages.filter(page => page.id === link.id)\n      link.key = createUuid()\n      if (pages.length === 0) {\n        this.pages.push(link)\n      } else {\n        link.name = `${link.name}(${pages.length + 1})`\n        this.pages.push(link)\n      }\n      this.keyList.push(link.key)\n      this.activeKey = link.key\n    },\n    close(id) {\n      const pages = this.pages.filter(page => page.id === id)\n      pages.forEach(page => {\n        this.remove(page.key)\n      })\n    },\n    onEdit(targetKey, action) {\n      this[action](targetKey)\n    },\n    remove(targetKey) {\n      this.pages = this.pages.filter(page => page.key !== targetKey)\n      this.keyList = this.keyList.filter(path => path !== targetKey)\n      // 判断当前标签是否关闭，若关闭则跳转到最后一个还存在的标签页\n      if (!this.keyList.includes(this.activeKey)) {\n        this.selectedLastPath()\n      }\n    },\n    selectedLastPath() {\n      this.activeKey = this.keyList[this.keyList.length - 1]\n    },\n    closeConnect(e) {\n      const pages = this.pages.filter(page => page.key === e)\n      pages.forEach(page => {\n        this.close(page.id)\n      })\n    },\n\n    // content menu\n    closeThat(e) {\n      this.remove(e)\n    },\n    closeLeft(e) {\n      const currentIndex = this.keyList.indexOf(e)\n      if (currentIndex > 0) {\n        this.keyList.forEach((key, index) => {\n          if (index < currentIndex) {\n            this.remove(key)\n          }\n        })\n      } else {\n        this.$message.info('左侧没有会话标签')\n      }\n    },\n    closeRight(e) {\n      const currentIndex = this.keyList.indexOf(e)\n      if (currentIndex < this.keyList.length - 1) {\n        this.keyList.forEach((key, index) => {\n          if (index > currentIndex) {\n            this.remove(key)\n          }\n        })\n      } else {\n        this.$message.info('右侧没有会话标签')\n      }\n    },\n    closeOther(e) {\n      const currentIndex = this.keyList.indexOf(e)\n      this.keyList.forEach((key, index) => {\n        if (index !== currentIndex) {\n          this.remove(key)\n        }\n      })\n    },\n    closeAll() {\n      this.keyList.forEach((key, index) => {\n        this.remove(key)\n      })\n    },\n    closeMenuClick(key, route) {\n      this[key](route)\n    },\n    renderTabPaneMenu(e) {\n      return (\n        <a-menu\n          {...{\n            on: {\n              click: ({ key, item, domEvent }) => {\n                this.closeMenuClick(key, e)\n              }\n            }\n          }}\n        >\n          <a-menu-item key=\"closeConnect\">关闭当前会话</a-menu-item>\n          <a-menu-item key=\"closeThat\">关闭当前会话连接</a-menu-item>\n          <a-menu-item key=\"closeRight\">关闭右侧会话连接</a-menu-item>\n          <a-menu-item key=\"closeRight\">关闭右侧会话连接</a-menu-item>\n          <a-menu-item key=\"closeLeft\">关闭左侧会话连接</a-menu-item>\n          <a-menu-item key=\"closeOther\">关闭其它会话连接</a-menu-item>\n          <a-menu-item key=\"closeAll\">关闭全部会话连接</a-menu-item>\n        </a-menu>\n      )\n    },\n    // render\n    renderTabPane(title, key) {\n      const menu = this.renderTabPaneMenu(key)\n\n      return (\n        <a-dropdown overlay={menu} trigger={['contextmenu']}>\n          <span style={{ userSelect: 'none' }}>{title}</span>\n        </a-dropdown>\n      )\n    }\n  },\n  watch: {\n  },\n  render() {\n    const {\n      onEdit,\n      $data: { pages }\n    } = this\n    const panes = pages.map(page => {\n      return (\n        <a-tab-pane\n          tab={this.renderTabPane(page.name, page.key)}\n          key={page.key}\n          closable={true}\n          forceRender={true}\n        ><Terminal termData={page} key={page.key}></Terminal></a-tab-pane>\n      )\n    })\n\n    return (\n      <div class=\"shell-tab\" style={ `marginLeft: ${ this.showDrawer ? this.drawerWidth : '0px' }` }>\n        <div class=\"shell-tab-wrapper\">\n          <a-tabs\n            hideAdd\n            size=\"small\"\n            type={'editable-card'}\n            v-model={this.activeKey}\n            tabBarStyle={{ background: '#3b3b3b', height: '35px', margin: 0, paddingLeft: '8px', paddingTop: '1px' }}\n            {...{ on: { edit: onEdit } }}\n          >\n            {panes}\n          </a-tabs>\n        </div>\n      </div>\n    )\n  }\n}\n</script>\n<style lang=\"less\">\n.shell-tab {\n  transition: all 0.4s ease 0s;\n  .shell-tab-wrapper {\n    .ant-tabs-bar {\n      border-bottom-color: #616161;\n      .ant-tabs-nav-container {\n        height: 35px;\n        .ant-tabs-nav-wrap {\n          .ant-tabs-nav {\n            .ant-tabs-tab {\n              height: 34px;\n              line-height: 33px;\n              background: #e5e5e5;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n</style>\n"]}]}