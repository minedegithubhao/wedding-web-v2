{"remainingRequest":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/src/components/pts/Screenshot/index.vue?vue&type=style&index=0&id=4f6c19b9&lang=less&scoped=true&","dependencies":[{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/src/components/pts/Screenshot/index.vue","mtime":1605568762424},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouc2NyZWVuc2hvdC1jb250YWluZXIgewogIHBhZGRpbmc6IDZweDsKICB0cmFuc2l0aW9uOiBhbGwgMC4zczsKICBpbWcgewogICAgd2lkdGg6IDEwMHB4OwogICAgbWFyZ2luOiA2cHggNnB4OwogICAgYm9yZGVyLXJhZGl1czogMnB4OwogICAgYm9yZGVyOiAxcHggc29saWQgIzQ5NWJhOTsKICAgIHRyYW5zaXRpb246IGFsbCAwLjNzOwogICAgY3Vyc29yOiBwb2ludGVyOwogICAgJjpob3ZlciwKICAgICY6Zm9jdXMgewogICAgICBib3JkZXItY29sb3I6IEBwcmltYXJ5LWNvbG9yOwogICAgfQogIH0KfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/pts/Screenshot","sourcesContent":["<template>\n  <div class=\"screenshot-container\"\n       v-if=\"false\">\n    <venus-scroll>\n      <img id=\"downImg\"\n           :src=\"file.url\"\n           v-for=\"file in fileList\"\n           :key=\"file.id\"\n           @click=\"(e)=> imgClick(file.url, e)\" />\n    </venus-scroll>\n    <a-modal :visible=\"previewVisible\"\n             :footer=\"null\"\n             @cancel=\"previewVisible = false\"\n             width=\"60%\"\n             :bodyStyle=\"{ padding: 0, borderRadius: '3px', border: '1px solid rgba(66, 66, 66, 0.7)' }\">\n      <img alt=\"加载失败\"\n           style=\"width: 100%\"\n           :src=\"imgData\" />\n    </a-modal>\n  </div>\n</template>\n\n<script>\nimport html2canvas from 'html2canvas'\nimport { createUuid } from '@/utils/util'\nimport VenusScroll from '@/components/pts/Scroll'\n\nexport default {\n  name: 'Screenshot',\n  components: {\n    VenusScroll\n  },\n  props: {\n    afterAction: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data () {\n    return {\n      fileList: [],\n      imgData: '',\n      previewVisible: false\n    }\n  },\n  computed: {},\n  watch: {},\n  created () { },\n  mounted () { },\n  beforeDestroy () { },\n  methods: {\n    capture (element) {\n      if (!element) {\n        console.log(new Error('目标 Element 为空!'))\n      } else if (typeof element === 'string') {\n        this.setImage(document.getElementById(element))\n      } else {\n        this.setImage(element)\n      }\n    },\n    // 截取图片\n    setImage (nodeBox) {\n      const that = this\n      const canvas2 = document.createElement('canvas')\n      // let _canvas = document.getElementById('child');\n      const _canvas = nodeBox\n      const w = parseInt(window.getComputedStyle(_canvas).width)\n      const h = parseInt(window.getComputedStyle(_canvas).height)\n      // 将canvas画布放大若干倍，然后盛放在较小的容器内，就显得不模糊了\n      canvas2.width = w\n      canvas2.height = h\n      canvas2.style.width = w + 'px'\n      canvas2.style.height = h + 'px'\n      // 可以按照自己的需求，对context的参数修改,translate指的是偏移量\n      const context = canvas2.getContext('2d')\n      // context.scale(2, 2)\n      html2canvas(nodeBox, {\n        canvas: canvas2,\n        scale: 1\n      }).then(function (canvas) {\n        const img = that.getBlob(canvas)\n        if (that.afterAction) {\n          const oMyForm = new FormData()\n          const fileName = 'mobile' + '.jpg'\n          oMyForm.append('file', img.blob, fileName)\n          // oMyForm.append(\"fileName\", fileName);\n          oMyForm.append('fileType', 'image')\n          // oMyForm.append('user_id', that)\n          that.$emit('uploadResult', 'success', { formData: oMyForm, img: img })\n        }\n      })\n    },\n    // onUploadProgress (e, id) {\n    //   // 属性lengthComputable主要表明总共需要完成的工作量和已经完成的工作是否可以被测量\n    //   // 如果lengthComputable为false，就获取不到e.total和e.loaded\n    //   // if (e.lengthComputable) {\n    //   //     const rate = this.uploadRate = e.loaded / e.total;  //已上传的比例\n    //   //     if (rate < 1) {\n    //   //         // 这里的进度只能表明文件已经上传到后台，但是后台有没有处理完还不知道\n    //   //         // 因此不能直接显示为100%，不然用户会误以为已经上传完毕，关掉浏览器的话就可能导致上传失败\n    //   //         // 等响应回来时，再将进度设为100%\n    //   //         this.uploadRate = rate;\n    //   //         this.uploadStyle.width = (rate *100).toFixed(2)+ '%';\n    //   //     }\n    //   // }\n    //   console.log(e.loaded / e.total)\n    //   this.$emit('uploadProgress', e)\n    // },\n    imgClick (imgUrl, e) {\n      this.imgData = imgUrl\n      this.previewVisible = true\n    },\n    getBlob (canvas) {\n      // 获取blob对象\n      let data = canvas.toDataURL('image/jpeg', 1)\n      const uuid = createUuid()\n      // 把图片添加到图片队列中\n      this.fileList.push({ id: uuid, url: data })\n      data = data.split(',')[1]\n      data = window.atob(data)\n      const ia = new Uint8Array(data.length)\n      for (let i = 0; i < data.length; i++) {\n        ia[i] = data.charCodeAt(i)\n      }\n      return {\n        blob: new Blob([ia], { type: 'image/jpeg' }),\n        id: uuid\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.screenshot-container {\n  padding: 6px;\n  transition: all 0.3s;\n  img {\n    width: 100px;\n    margin: 6px 6px;\n    border-radius: 2px;\n    border: 1px solid #495ba9;\n    transition: all 0.3s;\n    cursor: pointer;\n    &:hover,\n    &:focus {\n      border-color: @primary-color;\n    }\n  }\n}\n</style>\n"]}]}