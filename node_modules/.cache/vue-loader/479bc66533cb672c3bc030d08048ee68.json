{"remainingRequest":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/src/components/GlobalHeader/GlobalHeader.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/src/components/GlobalHeader/GlobalHeader.vue","mtime":1605568762405},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQGltcG9ydCAnLi4vaW5kZXgubGVzcyc7Ci5oZWFkZXItYW5pbWF0IHsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgei1pbmRleDogQGFudC1nbG9iYWwtaGVhZGVyLXppbmRleDsKfQouc2hvd0hlYWRlci1lbnRlci1hY3RpdmUgewogIHRyYW5zaXRpb246IGFsbCAwLjI1cyBlYXNlOwp9Ci5zaG93SGVhZGVyLWxlYXZlLWFjdGl2ZSB7CiAgdHJhbnNpdGlvbjogYWxsIDAuNXMgZWFzZTsKfQouc2hvd0hlYWRlci1lbnRlciwKLnNob3dIZWFkZXItbGVhdmUtdG8gewogIG9wYWNpdHk6IDA7Cn0K"},{"version":3,"sources":["GlobalHeader.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"GlobalHeader.vue","sourceRoot":"src/components/GlobalHeader","sourcesContent":["<template>\n  <transition name=\"showHeader\">\n    <div v-if=\"visible\"\n         class=\"header-animat\">\n      <h-menu v-if=\"device !== 'mobile' && layoutMode === 'topmenu'\"\n              class=\"page-header-menu\"\n              :className=\"[`content-width-${contentWidth}`]\"\n              mode=\"horizontal\"\n              slot=\"overlay\"\n              :menu=\"menus\"\n              theme=\"light\" />\n      <a-layout-header v-if=\"visible\"\n                       :class=\"[fixedHeader && 'ant-header-fixedHeader', sidebarOpened ? 'ant-header-side-opened' : 'ant-header-side-closed', theme ]\"\n                       :style=\"{ padding: '0' }\">\n        <div v-if=\"mode === 'sidemenu'\"\n             class=\"header\"\n             :class=\"theme\">\n          <div ref=\"header\">\n            <a-icon v-if=\"device==='mobile'\"\n                    class=\"trigger\"\n                    :type=\"collapsed ? 'menu-fold' : 'menu-unfold'\"\n                    @click=\"toggle\"\n                    style=\"float:left\"\n                    ref=\"headerIcon\" />\n            <a-icon v-else\n                    class=\"trigger\"\n                    :type=\"collapsed ? 'menu-unfold' : 'menu-fold'\"\n                    @click=\"toggle\"\n                    style=\"float:left\"\n                    ref=\"headerIcon\" />\n            <top-menu :top-menu-list=\"topMenuList\"\n                      :all-top-menus=\"allTopMenus\"\n                      @click=\"handleSelectTopMenu\"\n                      :style=\"{maxWidth: topMenuWidth}\"></top-menu>\n            <user-menu ref=\"userMenu\"\n                       :theme=\"theme\"></user-menu>\n          </div>\n        </div>\n        <div v-else\n             :class=\"['top-nav-header-index', theme]\">\n          <div class=\"header-index-wide\"\n               ref=\"header\">\n            <div class=\"header-index-left\">\n              <logo class=\"top-nav-header\"\n                    :show-title=\"device !== 'mobile'\" />\n              <!-- <s-menu v-if=\"device !== 'mobile'\" mode=\"horizontal\" :menu=\"menus\" :theme=\"theme\" /> -->\n              <top-menu :top-menu-list=\"topMenuList\"\n                        @click=\"handleSelectTopMenu\"\n                        :style=\"{maxWidth: topMenuWidth}\"\n                        :sub-menus=\"allMenus\"\n                        :all-top-menus=\"allTopMenus\"\n                        :theme=\"theme\"\n                        :mode=\"mode\"></top-menu>\n              <a-icon v-if=\"device === 'mobile'\"\n                      class=\"trigger\"\n                      :type=\"collapsed ? 'menu-fold' : 'menu-unfold'\"\n                      @click=\"toggle\" />\n            </div>\n            <user-menu class=\"header-index-right\"\n                       ref=\"userMenu\"\n                       :theme=\"theme\"></user-menu>\n          </div>\n        </div>\n      </a-layout-header>\n    </div>\n  </transition>\n</template>\n\n<script>\nimport UserMenu from '../tools/UserMenu'\nimport SMenu from '../Menu/'\nimport TopMenu from '@/components/pts/TopMenu'\nimport Logo from '../tools/Logo'\nimport { mixin } from '@/utils/mixin'\nimport HMenu from '@/components/pts/HorizontalMenu/'\n\nexport default {\n  name: 'GlobalHeader',\n  components: {\n    UserMenu,\n    SMenu,\n    Logo,\n    HMenu,\n    TopMenu\n  },\n  mixins: [mixin],\n  props: {\n    mode: {\n      type: String,\n      // sidemenu, topmenu\n      default: 'sidemenu'\n    },\n    menus: {\n      type: Array,\n      required: true\n    },\n    allMenus: {\n      type: Object,\n      required: true\n    },\n    allTopMenus: {\n      type: Object,\n      required: true\n    },\n    topMenuList: {\n      type: Array,\n      required: true\n    },\n    theme: {\n      type: String,\n      required: false,\n      default: 'dark'\n    },\n    collapsed: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    device: {\n      type: String,\n      required: false,\n      default: 'desktop'\n    }\n  },\n  data() {\n    return {\n      visible: true,\n      oldScrollTop: 0,\n      topMenuWidth: 0,\n      headerWidth: '0px'\n    }\n  },\n  mounted() {\n    document.addEventListener('scroll', this.handleScroll, { passive: true })\n    this.headerWidth = this.$refs.header.clientWidth\n    // 监听窗口大小\n    window.onresize = () => {\n      return (() => {\n        this.headerWidth = this.$refs.header.clientWidth\n      })()\n    }\n  },\n  created() { },\n  watch: {\n    headerWidth(val) {\n      const userMenu = this.$refs.userMenu.$el.clientWidth\n      const headerIcon = this.mode === 'sidemenu' ? this.$refs.headerIcon.clientWidth : 0\n\n      this.topMenuWidth = val - userMenu - headerIcon + 'px'\n    },\n    collapsed(val) {\n      this.$nextTick(() => {\n        const userMenu = this.$refs.userMenu.$el.clientWidth\n        const headerIcon = this.mode === 'sidemenu' ? this.$refs.headerIcon.clientWidth : 0\n        if (val) {\n          this.topMenuWidth = this.$refs.header.offsetWidth - userMenu - headerIcon - 80 + 256 + 'px'\n        } else {\n          this.topMenuWidth = this.$refs.header.offsetWidth - userMenu - headerIcon - 176 + 'px'\n        }\n      })\n    }\n  },\n  methods: {\n    handleScroll() {\n      if (!this.autoHideHeader) {\n        return\n      }\n\n      const scrollTop = document.body.scrollTop + document.documentElement.scrollTop\n      if (!this.ticking) {\n        this.ticking = true\n        requestAnimationFrame(() => {\n          if (this.oldScrollTop > scrollTop) {\n            this.visible = true\n          } else if (scrollTop > 300 && this.visible) {\n            this.visible = false\n          } else if (scrollTop < 300 && !this.visible) {\n            this.visible = true\n          }\n          this.oldScrollTop = scrollTop\n          this.ticking = false\n        })\n      }\n    },\n    toggle() {\n      this.$emit('toggle')\n    },\n    handleSelectTopMenu(topMenu) {\n      this.$emit('handle-select-top-menu', topMenu)\n    }\n  },\n  beforeDestroy() {\n    document.body.removeEventListener('scroll', this.handleScroll, true)\n  }\n}\n</script>\n\n<style lang=\"less\">\n@import '../index.less';\n.header-animat {\n  position: relative;\n  z-index: @ant-global-header-zindex;\n}\n.showHeader-enter-active {\n  transition: all 0.25s ease;\n}\n.showHeader-leave-active {\n  transition: all 0.5s ease;\n}\n.showHeader-enter,\n.showHeader-leave-to {\n  opacity: 0;\n}\n</style>\n"]}]}