{"remainingRequest":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/src/components/pts/Screenshot/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/src/components/pts/Screenshot/index.vue","mtime":1605568762424},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBodG1sMmNhbnZhcyBmcm9tICdodG1sMmNhbnZhcycKaW1wb3J0IHsgY3JlYXRlVXVpZCB9IGZyb20gJ0AvdXRpbHMvdXRpbCcKaW1wb3J0IFZlbnVzU2Nyb2xsIGZyb20gJ0AvY29tcG9uZW50cy9wdHMvU2Nyb2xsJwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdTY3JlZW5zaG90JywKICBjb21wb25lbnRzOiB7CiAgICBWZW51c1Njcm9sbAogIH0sCiAgcHJvcHM6IHsKICAgIGFmdGVyQWN0aW9uOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9CiAgfSwKICBkYXRhICgpIHsKICAgIHJldHVybiB7CiAgICAgIGZpbGVMaXN0OiBbXSwKICAgICAgaW1nRGF0YTogJycsCiAgICAgIHByZXZpZXdWaXNpYmxlOiBmYWxzZQogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHt9LAogIHdhdGNoOiB7fSwKICBjcmVhdGVkICgpIHsgfSwKICBtb3VudGVkICgpIHsgfSwKICBiZWZvcmVEZXN0cm95ICgpIHsgfSwKICBtZXRob2RzOiB7CiAgICBjYXB0dXJlIChlbGVtZW50KSB7CiAgICAgIGlmICghZWxlbWVudCkgewogICAgICAgIGNvbnNvbGUubG9nKG5ldyBFcnJvcign55uu5qCHIEVsZW1lbnQg5Li656m6IScpKQogICAgICB9IGVsc2UgaWYgKHR5cGVvZiBlbGVtZW50ID09PSAnc3RyaW5nJykgewogICAgICAgIHRoaXMuc2V0SW1hZ2UoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoZWxlbWVudCkpCiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5zZXRJbWFnZShlbGVtZW50KQogICAgICB9CiAgICB9LAogICAgLy8g5oiq5Y+W5Zu+54mHCiAgICBzZXRJbWFnZSAobm9kZUJveCkgewogICAgICBjb25zdCB0aGF0ID0gdGhpcwogICAgICBjb25zdCBjYW52YXMyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnY2FudmFzJykKICAgICAgLy8gbGV0IF9jYW52YXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY2hpbGQnKTsKICAgICAgY29uc3QgX2NhbnZhcyA9IG5vZGVCb3gKICAgICAgY29uc3QgdyA9IHBhcnNlSW50KHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKF9jYW52YXMpLndpZHRoKQogICAgICBjb25zdCBoID0gcGFyc2VJbnQod2luZG93LmdldENvbXB1dGVkU3R5bGUoX2NhbnZhcykuaGVpZ2h0KQogICAgICAvLyDlsIZjYW52YXPnlLvluIPmlL7lpKfoi6XlubLlgI3vvIznhLblkI7nm5vmlL7lnKjovoPlsI/nmoTlrrnlmajlhoXvvIzlsLHmmL7lvpfkuI3mqKHns4rkuoYKICAgICAgY2FudmFzMi53aWR0aCA9IHcKICAgICAgY2FudmFzMi5oZWlnaHQgPSBoCiAgICAgIGNhbnZhczIuc3R5bGUud2lkdGggPSB3ICsgJ3B4JwogICAgICBjYW52YXMyLnN0eWxlLmhlaWdodCA9IGggKyAncHgnCiAgICAgIC8vIOWPr+S7peaMieeFp+iHquW3seeahOmcgOaxgu+8jOWvuWNvbnRleHTnmoTlj4LmlbDkv67mlLksdHJhbnNsYXRl5oyH55qE5piv5YGP56e76YePCiAgICAgIGNvbnN0IGNvbnRleHQgPSBjYW52YXMyLmdldENvbnRleHQoJzJkJykKICAgICAgLy8gY29udGV4dC5zY2FsZSgyLCAyKQogICAgICBodG1sMmNhbnZhcyhub2RlQm94LCB7CiAgICAgICAgY2FudmFzOiBjYW52YXMyLAogICAgICAgIHNjYWxlOiAxCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKGNhbnZhcykgewogICAgICAgIGNvbnN0IGltZyA9IHRoYXQuZ2V0QmxvYihjYW52YXMpCiAgICAgICAgaWYgKHRoYXQuYWZ0ZXJBY3Rpb24pIHsKICAgICAgICAgIGNvbnN0IG9NeUZvcm0gPSBuZXcgRm9ybURhdGEoKQogICAgICAgICAgY29uc3QgZmlsZU5hbWUgPSAnbW9iaWxlJyArICcuanBnJwogICAgICAgICAgb015Rm9ybS5hcHBlbmQoJ2ZpbGUnLCBpbWcuYmxvYiwgZmlsZU5hbWUpCiAgICAgICAgICAvLyBvTXlGb3JtLmFwcGVuZCgiZmlsZU5hbWUiLCBmaWxlTmFtZSk7CiAgICAgICAgICBvTXlGb3JtLmFwcGVuZCgnZmlsZVR5cGUnLCAnaW1hZ2UnKQogICAgICAgICAgLy8gb015Rm9ybS5hcHBlbmQoJ3VzZXJfaWQnLCB0aGF0KQogICAgICAgICAgdGhhdC4kZW1pdCgndXBsb2FkUmVzdWx0JywgJ3N1Y2Nlc3MnLCB7IGZvcm1EYXRhOiBvTXlGb3JtLCBpbWc6IGltZyB9KQogICAgICAgIH0KICAgICAgfSkKICAgIH0sCiAgICAvLyBvblVwbG9hZFByb2dyZXNzIChlLCBpZCkgewogICAgLy8gICAvLyDlsZ7mgKdsZW5ndGhDb21wdXRhYmxl5Li76KaB6KGo5piO5oC75YWx6ZyA6KaB5a6M5oiQ55qE5bel5L2c6YeP5ZKM5bey57uP5a6M5oiQ55qE5bel5L2c5piv5ZCm5Y+v5Lul6KKr5rWL6YePCiAgICAvLyAgIC8vIOWmguaenGxlbmd0aENvbXB1dGFibGXkuLpmYWxzZe+8jOWwseiOt+WPluS4jeWIsGUudG90YWzlkoxlLmxvYWRlZAogICAgLy8gICAvLyBpZiAoZS5sZW5ndGhDb21wdXRhYmxlKSB7CiAgICAvLyAgIC8vICAgICBjb25zdCByYXRlID0gdGhpcy51cGxvYWRSYXRlID0gZS5sb2FkZWQgLyBlLnRvdGFsOyAgLy/lt7LkuIrkvKDnmoTmr5TkvosKICAgIC8vICAgLy8gICAgIGlmIChyYXRlIDwgMSkgewogICAgLy8gICAvLyAgICAgICAgIC8vIOi/memHjOeahOi/m+W6puWPquiDveihqOaYjuaWh+S7tuW3sue7j+S4iuS8oOWIsOWQjuWPsO+8jOS9huaYr+WQjuWPsOacieayoeacieWkhOeQhuWujOi/mOS4jeefpemBkwogICAgLy8gICAvLyAgICAgICAgIC8vIOWboOatpOS4jeiDveebtOaOpeaYvuekuuS4ujEwMCXvvIzkuI3nhLbnlKjmiLfkvJror6/ku6XkuLrlt7Lnu4/kuIrkvKDlrozmr5XvvIzlhbPmjonmtY/op4jlmajnmoTor53lsLHlj6/og73lr7zoh7TkuIrkvKDlpLHotKUKICAgIC8vICAgLy8gICAgICAgICAvLyDnrYnlk43lupTlm57mnaXml7bvvIzlho3lsIbov5vluqborr7kuLoxMDAlCiAgICAvLyAgIC8vICAgICAgICAgdGhpcy51cGxvYWRSYXRlID0gcmF0ZTsKICAgIC8vICAgLy8gICAgICAgICB0aGlzLnVwbG9hZFN0eWxlLndpZHRoID0gKHJhdGUgKjEwMCkudG9GaXhlZCgyKSsgJyUnOwogICAgLy8gICAvLyAgICAgfQogICAgLy8gICAvLyB9CiAgICAvLyAgIGNvbnNvbGUubG9nKGUubG9hZGVkIC8gZS50b3RhbCkKICAgIC8vICAgdGhpcy4kZW1pdCgndXBsb2FkUHJvZ3Jlc3MnLCBlKQogICAgLy8gfSwKICAgIGltZ0NsaWNrIChpbWdVcmwsIGUpIHsKICAgICAgdGhpcy5pbWdEYXRhID0gaW1nVXJsCiAgICAgIHRoaXMucHJldmlld1Zpc2libGUgPSB0cnVlCiAgICB9LAogICAgZ2V0QmxvYiAoY2FudmFzKSB7CiAgICAgIC8vIOiOt+WPlmJsb2Llr7nosaEKICAgICAgbGV0IGRhdGEgPSBjYW52YXMudG9EYXRhVVJMKCdpbWFnZS9qcGVnJywgMSkKICAgICAgY29uc3QgdXVpZCA9IGNyZWF0ZVV1aWQoKQogICAgICAvLyDmiorlm77niYfmt7vliqDliLDlm77niYfpmJ/liJfkuK0KICAgICAgdGhpcy5maWxlTGlzdC5wdXNoKHsgaWQ6IHV1aWQsIHVybDogZGF0YSB9KQogICAgICBkYXRhID0gZGF0YS5zcGxpdCgnLCcpWzFdCiAgICAgIGRhdGEgPSB3aW5kb3cuYXRvYihkYXRhKQogICAgICBjb25zdCBpYSA9IG5ldyBVaW50OEFycmF5KGRhdGEubGVuZ3RoKQogICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGRhdGEubGVuZ3RoOyBpKyspIHsKICAgICAgICBpYVtpXSA9IGRhdGEuY2hhckNvZGVBdChpKQogICAgICB9CiAgICAgIHJldHVybiB7CiAgICAgICAgYmxvYjogbmV3IEJsb2IoW2lhXSwgeyB0eXBlOiAnaW1hZ2UvanBlZycgfSksCiAgICAgICAgaWQ6IHV1aWQKICAgICAgfQogICAgfQogIH0KfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/pts/Screenshot","sourcesContent":["<template>\n  <div class=\"screenshot-container\"\n       v-if=\"false\">\n    <venus-scroll>\n      <img id=\"downImg\"\n           :src=\"file.url\"\n           v-for=\"file in fileList\"\n           :key=\"file.id\"\n           @click=\"(e)=> imgClick(file.url, e)\" />\n    </venus-scroll>\n    <a-modal :visible=\"previewVisible\"\n             :footer=\"null\"\n             @cancel=\"previewVisible = false\"\n             width=\"60%\"\n             :bodyStyle=\"{ padding: 0, borderRadius: '3px', border: '1px solid rgba(66, 66, 66, 0.7)' }\">\n      <img alt=\"加载失败\"\n           style=\"width: 100%\"\n           :src=\"imgData\" />\n    </a-modal>\n  </div>\n</template>\n\n<script>\nimport html2canvas from 'html2canvas'\nimport { createUuid } from '@/utils/util'\nimport VenusScroll from '@/components/pts/Scroll'\n\nexport default {\n  name: 'Screenshot',\n  components: {\n    VenusScroll\n  },\n  props: {\n    afterAction: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data () {\n    return {\n      fileList: [],\n      imgData: '',\n      previewVisible: false\n    }\n  },\n  computed: {},\n  watch: {},\n  created () { },\n  mounted () { },\n  beforeDestroy () { },\n  methods: {\n    capture (element) {\n      if (!element) {\n        console.log(new Error('目标 Element 为空!'))\n      } else if (typeof element === 'string') {\n        this.setImage(document.getElementById(element))\n      } else {\n        this.setImage(element)\n      }\n    },\n    // 截取图片\n    setImage (nodeBox) {\n      const that = this\n      const canvas2 = document.createElement('canvas')\n      // let _canvas = document.getElementById('child');\n      const _canvas = nodeBox\n      const w = parseInt(window.getComputedStyle(_canvas).width)\n      const h = parseInt(window.getComputedStyle(_canvas).height)\n      // 将canvas画布放大若干倍，然后盛放在较小的容器内，就显得不模糊了\n      canvas2.width = w\n      canvas2.height = h\n      canvas2.style.width = w + 'px'\n      canvas2.style.height = h + 'px'\n      // 可以按照自己的需求，对context的参数修改,translate指的是偏移量\n      const context = canvas2.getContext('2d')\n      // context.scale(2, 2)\n      html2canvas(nodeBox, {\n        canvas: canvas2,\n        scale: 1\n      }).then(function (canvas) {\n        const img = that.getBlob(canvas)\n        if (that.afterAction) {\n          const oMyForm = new FormData()\n          const fileName = 'mobile' + '.jpg'\n          oMyForm.append('file', img.blob, fileName)\n          // oMyForm.append(\"fileName\", fileName);\n          oMyForm.append('fileType', 'image')\n          // oMyForm.append('user_id', that)\n          that.$emit('uploadResult', 'success', { formData: oMyForm, img: img })\n        }\n      })\n    },\n    // onUploadProgress (e, id) {\n    //   // 属性lengthComputable主要表明总共需要完成的工作量和已经完成的工作是否可以被测量\n    //   // 如果lengthComputable为false，就获取不到e.total和e.loaded\n    //   // if (e.lengthComputable) {\n    //   //     const rate = this.uploadRate = e.loaded / e.total;  //已上传的比例\n    //   //     if (rate < 1) {\n    //   //         // 这里的进度只能表明文件已经上传到后台，但是后台有没有处理完还不知道\n    //   //         // 因此不能直接显示为100%，不然用户会误以为已经上传完毕，关掉浏览器的话就可能导致上传失败\n    //   //         // 等响应回来时，再将进度设为100%\n    //   //         this.uploadRate = rate;\n    //   //         this.uploadStyle.width = (rate *100).toFixed(2)+ '%';\n    //   //     }\n    //   // }\n    //   console.log(e.loaded / e.total)\n    //   this.$emit('uploadProgress', e)\n    // },\n    imgClick (imgUrl, e) {\n      this.imgData = imgUrl\n      this.previewVisible = true\n    },\n    getBlob (canvas) {\n      // 获取blob对象\n      let data = canvas.toDataURL('image/jpeg', 1)\n      const uuid = createUuid()\n      // 把图片添加到图片队列中\n      this.fileList.push({ id: uuid, url: data })\n      data = data.split(',')[1]\n      data = window.atob(data)\n      const ia = new Uint8Array(data.length)\n      for (let i = 0; i < data.length; i++) {\n        ia[i] = data.charCodeAt(i)\n      }\n      return {\n        blob: new Blob([ia], { type: 'image/jpeg' }),\n        id: uuid\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.screenshot-container {\n  padding: 6px;\n  transition: all 0.3s;\n  img {\n    width: 100px;\n    margin: 6px 6px;\n    border-radius: 2px;\n    border: 1px solid #495ba9;\n    transition: all 0.3s;\n    cursor: pointer;\n    &:hover,\n    &:focus {\n      border-color: @primary-color;\n    }\n  }\n}\n</style>\n"]}]}