{"remainingRequest":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/babel-loader/lib/index.js!/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/eslint-loader/index.js??ref--13-0!/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/src/utils/dict.js","dependencies":[{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/src/utils/dict.js","mtime":1605568762442},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IiOwppbXBvcnQgeyBheGlvcyB9IGZyb20gJ0AvdXRpbHMvcmVxdWVzdCc7CnZhciBhcGkgPSB7CiAgZGljdERhdGE6ICcvc3lzdGVtL2RpY3QvZGF0YScKfTsgLy8g5a2X5YW45Lik56eN55So5rOV77yM5ZCE5pyJ5LyY57y654K5Ci8vIDEuTWFwIOmcgOimgeaVsOe7hOeahOaXtuWAmeaehOmAoOaVsOe7hOS4jeaWueS+vwovLyBvcGVyVHlwZU1hcCA9IGF3YWl0IGdldERpY3RNYXAoJ3N5c19vcGVyX3R5cGUnKQovLyB0aGlzLm9wZXJUeXBlTWFwID0gb3BlclR5cGVNYXAKLy8gdGhpcy5vcGVyVHlwZU1hcC5mb3JFYWNoKCh2YWx1ZSwga2V5LCBteW1hcCkgPT4gewovLyAgIHRoaXMuYnVzaW5lc3NUeXBlcy5wdXNoKHsgY29kZToga2V5LCBsYWJlbDogdmFsdWUgfSkKLy8gfSkKLy8gMi7mlbDnu4Qg5ZyobW9kYWzosIPnlKjmsqHmnIltYXDmlrnkvr8KLy8gdGhpcy5idXNpbmVzc1R5cGVzID0gYXdhaXQgZ2V0RGljdEFycmF5KCdzeXNfb3Blcl90eXBlJykKLy8gdGhpcy5idXNpbmVzc1R5cGVzLm1hcChkID0+IHsKLy8gICBvcGVyVHlwZU1hcFtkLmRpY3RWYWx1ZV0gPSB7IHRleHQ6IGQuZGljdExhYmVsIH0KLy8gfSkKLy8gdGhpcy5vcGVyVHlwZU1hcCA9IG9wZXJUeXBlTWFwCgovKioKICog5qC55o2u57G75Z6L6I635Y+W5a2X5YW45YaF5a65IOi/lOWbnk1hcAogKiBAcGFyYW0ge1N0cmluZ30gZGljdFR5cGUg5a2X5YW457G75Z6LCiAqLwoKZXhwb3J0IGZ1bmN0aW9uIGdldERpY3RNYXAoZGljdFR5cGUpIHsKICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgLy8gYWpheAogICAgYXhpb3MoewogICAgICB1cmw6IGFwaS5kaWN0RGF0YSArICcvdHlwZScsCiAgICAgIG1ldGhvZDogJ2dldCcsCiAgICAgIHBhcmFtczogewogICAgICAgICdkaWN0VHlwZSc6IGRpY3RUeXBlCiAgICAgIH0KICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICB2YXIgbWFwID0gbmV3IE1hcCgpOwogICAgICByZXMubWFwKGZ1bmN0aW9uIChkKSB7CiAgICAgICAgbWFwLnNldChkLmRpY3RWYWx1ZSwgZC5kaWN0TGFiZWwpOwogICAgICB9KTsKICAgICAgcmVzb2x2ZShtYXApOwogICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikgewogICAgICByZWplY3QoZXJyKTsKICAgIH0pOwogIH0pOwp9Ci8qKgogKiDmoLnmja7nsbvlnovojrflj5blrZflhbjlhoXlrrkg6L+U5Zue5pWw57uECiAqIEBwYXJhbSB7U3RyaW5nfSBkaWN0VHlwZSDlrZflhbjnsbvlnosKICovCgpleHBvcnQgZnVuY3Rpb24gZ2V0RGljdEFycmF5KGRpY3RUeXBlKSB7CiAgcmV0dXJuIGF4aW9zKHsKICAgIHVybDogYXBpLmRpY3REYXRhICsgJy90eXBlJywKICAgIG1ldGhvZDogJ2dldCcsCiAgICBwYXJhbXM6IHsKICAgICAgJ2RpY3RUeXBlJzogZGljdFR5cGUKICAgIH0KICB9KTsKfQ=="},{"version":3,"sources":["/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/src/utils/dict.js"],"names":["axios","api","dictData","getDictMap","dictType","Promise","resolve","reject","url","method","params","then","res","map","Map","d","set","dictValue","dictLabel","catch","err","getDictArray"],"mappings":";;;;;AAAA,SAASA,KAAT,QAAsB,iBAAtB;AACA,IAAMC,GAAG,GAAG;AACVC,EAAAA,QAAQ,EAAE;AADA,CAAZ,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AACA,OAAO,SAASC,UAAT,CAAqBC,QAArB,EAA+B;AACpC,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACxC;AACEP,IAAAA,KAAK,CAAC;AACJQ,MAAAA,GAAG,EAAEP,GAAG,CAACC,QAAJ,GAAe,OADhB;AAEJO,MAAAA,MAAM,EAAE,KAFJ;AAGJC,MAAAA,MAAM,EAAE;AAAE,oBAAYN;AAAd;AAHJ,KAAD,CAAL,CAIGO,IAJH,CAIQ,UAAAC,GAAG,EAAI;AACb,UAAMC,GAAG,GAAG,IAAIC,GAAJ,EAAZ;AACAF,MAAAA,GAAG,CAACC,GAAJ,CAAQ,UAAAE,CAAC,EAAI;AACXF,QAAAA,GAAG,CAACG,GAAJ,CAAQD,CAAC,CAACE,SAAV,EAAqBF,CAAC,CAACG,SAAvB;AACD,OAFD;AAGAZ,MAAAA,OAAO,CAACO,GAAD,CAAP;AACD,KAVD,EAUGM,KAVH,CAUS,UAAAC,GAAG,EAAI;AACdb,MAAAA,MAAM,CAACa,GAAD,CAAN;AACD,KAZD;AAaD,GAfM,CAAP;AAgBD;AACD;AACA;AACA;AACA;;AACA,OAAO,SAASC,YAAT,CAAuBjB,QAAvB,EAAiC;AACtC,SAAOJ,KAAK,CAAC;AACXQ,IAAAA,GAAG,EAAEP,GAAG,CAACC,QAAJ,GAAe,OADT;AAEXO,IAAAA,MAAM,EAAE,KAFG;AAGXC,IAAAA,MAAM,EAAE;AAAE,kBAAYN;AAAd;AAHG,GAAD,CAAZ;AAKD","sourcesContent":["import { axios } from '@/utils/request'\nconst api = {\n  dictData: '/system/dict/data'\n}\n\n// 字典两种用法，各有优缺点\n// 1.Map 需要数组的时候构造数组不方便\n// operTypeMap = await getDictMap('sys_oper_type')\n// this.operTypeMap = operTypeMap\n// this.operTypeMap.forEach((value, key, mymap) => {\n//   this.businessTypes.push({ code: key, label: value })\n// })\n// 2.数组 在modal调用没有map方便\n// this.businessTypes = await getDictArray('sys_oper_type')\n// this.businessTypes.map(d => {\n//   operTypeMap[d.dictValue] = { text: d.dictLabel }\n// })\n// this.operTypeMap = operTypeMap\n\n/**\n * 根据类型获取字典内容 返回Map\n * @param {String} dictType 字典类型\n */\nexport function getDictMap (dictType) {\n  return new Promise((resolve, reject) => {\n  // ajax\n    axios({\n      url: api.dictData + '/type',\n      method: 'get',\n      params: { 'dictType': dictType }\n    }).then(res => {\n      const map = new Map()\n      res.map(d => {\n        map.set(d.dictValue, d.dictLabel)\n      })\n      resolve(map)\n    }).catch(err => {\n      reject(err)\n    })\n  })\n}\n/**\n * 根据类型获取字典内容 返回数组\n * @param {String} dictType 字典类型\n */\nexport function getDictArray (dictType) {\n  return axios({\n    url: api.dictData + '/type',\n    method: 'get',\n    params: { 'dictType': dictType }\n  })\n}\n"]}]}