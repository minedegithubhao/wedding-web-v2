{"remainingRequest":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/babel-loader/lib/index.js!/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/src/components/pts/Upload/VenusUpload.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/src/components/pts/Upload/VenusUpload.vue","mtime":1605568762425},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["VenusUpload.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <a-upload :list-type=\"listType || 'text'\"\n            :multiple=\"multiple\"\n            :accept=\"accept\"\n            :method=\"method\"\n            :directory=\"directory\"\n            :customRequest=\"customRequest\"\n            :data=\"data\"\n            :disabled=\"disabled\"\n            :name=\"name\"\n            :previewFile=\"previewFile\"\n            :showUploadList=\"showUploadList\"\n            :supportServerRender=\"supportServerRender\"\n            :withCredentials=\"withCredentials\"\n            :openFileDialogOnClick=\"openFileDialogOnClick\"\n            :transformFile=\"transformFile\"\n            :headers=\"headers\"\n            :fileList=\"sFileList\"\n            :action=\"action || defaultAction\"\n            @change=\"fileChange\"\n            @download=\"download\"\n            @preview=\"filePreview\"\n            @reject=\"reject\"\n            :beforeUpload=\"beforeUpload\"\n            :remove=\"fileDelete\"\n            class=\"venus-upload\">\n    <a-button v-if=\"!maxLength || (maxLength && sFileList.length < maxLength)\"\n              :disabled=\"disabled\"\n              v-show=\"!disabledUpload\">\n      <a-icon type=\"upload\" />点击上传\n      <!-- <a-input :value=\"UUID\" @change=\"handleChange\" class=\"busId\"></a-input> -->\n    </a-button>\n  </a-upload>\n</template>\n\n<script>\n/**\n *  作者：姚正超\n *  描述：V1.0版本，请勿随意乱更改组件\n *  日期：2020年5月9日\n */\nimport { Upload as U } from 'ant-design-vue'\nimport { UUIDTSysSerialNumber } from '@/api/pts/sys/TSysSerialNumber'\nimport { ACCESS_TOKEN } from '@/store/mutation-types'\nimport Vue from 'vue'\nimport { downloadTSysFile, initTSysFileList, delTSysFile } from '@/api/pts/sys/TSysFile'\nimport prefix from '@/config/prefix'\n\nexport default {\n  name: 'VenusUpload',\n  model: {\n    prop: 'value',\n    event: 'change'\n  },\n  props: Object.assign({}, U.props, {\n    headers: {\n      type: Object,\n      default: function () {\n        return { token: Vue.ls.get(ACCESS_TOKEN) }\n      }\n    },\n    action: {\n      type: String,\n      default: ''\n    },\n    // 文件类型限制\n    acceptType: {\n      type: String,\n      default: '*'\n    },\n    // 文件大小限制\n    maxSize: {\n      type: Number,\n      default: undefined\n    },\n    // 最大列表长度，如上传多个文件此属性必须存在\n    maxLength: {\n      type: Number,\n      default: undefined\n    },\n    // 由于antd => Form表单组件限制所加属性，无需关注\n    value: {\n      type: String,\n      default: ''\n    },\n    // 是否上传到静态资源开放路径\n    isOpen: {\n      type: [Boolean, String],\n      default: false\n    },\n    // 上传成功的回调方法\n    uploadSuccess: {\n      // type: Function\n    },\n    // 上传成功的回调方法\n    uploadError: {\n      // type: Function\n    },\n    disabledUpload: {\n      type: Boolean,\n      default: false\n    }\n  }),\n  data () {\n    const value = !this.value || this.value === 0 || this.value === '0' ? '' : this.value\n    if (this.disabledUpload && this.disabled && this.value && this.value !== '0') {\n      this.UUID = value\n      this.sFileList = []\n      this.initUpload()\n    }\n    return {\n      sFileList: [],\n      UUID: value\n      // busId: value\n    }\n  },\n  computed: {\n    defaultAction: function () {\n      const busId = this.UUID || this.value\n      return process.env.VUE_APP_API_BASE_URL + '/pts/sys/TSysFile/upload?busId=' + busId + '&isOpen=' + this.matchOpen\n    },\n    matchOpen: function () {\n      return this.isOpen === true || this.isOpen === 'true' ? 1 : 0\n    }\n  },\n  // async mounted() {\n  //   this.UUID = this.value\n  // },\n  beforeDestroy () {\n    this.sFileList = []\n  },\n  watch: {\n    value (val = '') {\n      if ((!val || val === '0') && !this.disabledUpload) {\n        this.sFileList = []\n        this.handleUUID()\n      } else if ((this.UUID && this.UUID !== val) || !this.UUID) {\n        this.UUID = val\n        this.sFileList = []\n        this.initUpload()\n      }\n    }\n  },\n  created () { },\n  methods: {\n    triggerChange (e) {\n      // Should provide an event to pass value to Form.\n      this.$emit('change', this.UUID)\n    },\n    async handleUUID () {\n      await UUIDTSysSerialNumber().then(res => {\n        if (res.code === 0) {\n          this.UUID = res.data\n        } else {\n          console.log(new Error('获取busId失败'))\n          this.$message.error('上传组件出现意外错误')\n        }\n      })\n    },\n    handleChange (e) {\n      this.$emit('change', e.target.value)\n    },\n    fileChange ({ file, fileList }) {\n      if (file.status !== 'uploading') {\n      }\n      if (file.status === 'done') {\n        // this.initUpload()\n        if (file.response.code === 0) {\n          fileList.map(el => {\n            if (el.uid === file.uid) {\n              el['linkProps'] = { download: 'current' }\n            }\n            return el\n          })\n          this.$message.success(`${file.name} 文件上传成功`)\n          this.$emit('success', file.response)\n          // }\n        } else {\n          fileList.map(el => {\n            if (el.uid === file.uid) {\n              el['linkProps'] = { download: 'current' }\n            }\n            return el\n          })\n          this.$message.error(`${file.name} 文件上传失败` + file.response.msg)\n          this.$emit('error', file.response)\n        }\n      } else if (file.status === 'error') {\n        fileList.map(el => {\n          if (el.uid === file.uid) {\n            el['linkProps'] = { download: 'current' }\n          }\n          return el\n        })\n        this.$message.error(`${file.name} 文件上传失败`)\n        this.$emit('error', file.response)\n      }\n      if (file.status !== undefined) {\n        this.sFileList = fileList\n        this.triggerChange()\n      }\n    },\n    filePreview (file) {\n      if (file.status === 'done') {\n        if (file.linkProps.download === 'error') {\n          this.$message.error(`${file.name} 文件上传失败，无法下载`)\n        } else {\n          downloadTSysFile({ fileId: file.response.fileId, delete: false })\n        }\n      } else {\n        this.$message.error(`${file.name} 文件下载出现错误`)\n      }\n    },\n    initUpload () {\n      const self = this\n      initTSysFileList({ busId: this.value }).then(res => {\n        if (res.code === 0) {\n          // console.log('文件列表初始化开始-------------')\n          if (self.listType === 'text' && this.matchOpen === 1) {\n            res.data.some((item, i) => {\n              self.sFileList.push({\n                uid: item.id,\n                name: <a-tooltip><template slot=\"title\">{'点击下载文件'}</template>{item.fileRealname}</a-tooltip>,\n                status: 'done',\n                response: { fileId: item.id },\n                linkProps: { download: 'current' }\n              })\n            })\n          } else {\n            res.data.some((item, i) => {\n              self.sFileList.push({\n                uid: item.id,\n                name: <a-tooltip><template slot=\"title\">{'点击下载文件'}</template>{item.fileRealname}</a-tooltip>,\n                status: 'done',\n                url: self.defaultAction,\n                thumbUrl: prefix.OPEN_URL_PREFIX + item.filePath,\n                response: { fileId: item.id },\n                linkProps: { download: 'current' }\n              })\n            })\n          }\n          // res.data.some((item, i) => {\n          //   self.sFileList.push({\n          //     uid: item.id,\n          //     name: item.fileRealname,\n          //     status: 'done',\n          //     response: { fileId: item.id },\n          //     linkProps: { download: 'current' }\n          //   })\n          // })\n        }\n      })\n    },\n    async fileDelete (info) {\n      // 删除\n      await delTSysFile({ fileId: info.response.fileId, delete: true })\n        .then(res => {\n          if (res.code === 0) {\n            this.sFileList = this.sFileList.filter(file => file.response.fileId !== info.response.fileId)\n            this.$message.success('删除成功')\n          } else {\n            this.$message.error(res.msg || '删除失败')\n          }\n        })\n        .catch(() => {\n          this.$message.error('系统错误，请稍后再试')\n        })\n        .finally(() => {\n        })\n    },\n    beforeUpload (file, fileList) {\n      const isAcceptType = this.typeMatch(file.type)\n      if (!isAcceptType) {\n        this.$message.error(`文件类型限制为 ${this.acceptType}!`)\n      }\n      const lessThanMaxSize = !this.maxSize || (this.maxSize && file.size / 1024 / 1024 < this.maxSize)\n      if (!lessThanMaxSize) {\n        this.$message.error(`文件大小限制为 ${this.maxSize}MB!`)\n      }\n      return isAcceptType && lessThanMaxSize\n    },\n    typeMatch (fileType) {\n      if (this.acceptType === '*' || this.acceptType === '*/*') {\n        return true\n      }\n      const accept = this.acceptType.split(',')\n      const type = fileType.indexOf('/') > -1 ? fileType.split('/')[1] : fileType\n      for (let i = 0; i < accept.length; i++) {\n        if (accept[i] === type) {\n          return true\n        }\n      }\n      return false\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.busId {\n  display: none;\n  width: 0px;\n  height: 0px;\n}\n.venus-upload {\n  cursor: pointer;\n}\n.ant-upload .ant-upload-list .ant-upload-list-item .ant-upload-list-item {\n  height: 40px;\n}\n// .venus-upload {\n//   .ant-upload-list-item-card-actions {\n//     opacity: 1;\n//   }\n// }\n</style>\n"],"sourceRoot":"src/components/pts/Upload"}]}