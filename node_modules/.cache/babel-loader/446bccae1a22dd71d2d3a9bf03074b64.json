{"remainingRequest":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/babel-loader/lib/index.js!/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/src/views/pts/sys/modules/TSysSerialNumberModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/src/views/pts/sys/modules/TSysSerialNumberModal.vue","mtime":1605568762470},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9jeGRwYy9Xb3JrU3BhY2VzL2lkZWFfd29ya3NwYWNlL3dlZGRpbmctd2ViL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgc2F2ZVRTeXNTZXJpYWxOdW1iZXIsIHVuaXF1ZVRTeXNTZXJpYWxOdW1iZXIgfSBmcm9tICdAL2FwaS9wdHMvc3lzL1RTeXNTZXJpYWxOdW1iZXInOwppbXBvcnQgeyBnZXREaWN0QXJyYXkgfSBmcm9tICdAL3V0aWxzL2RpY3QnOwppbXBvcnQgcGljayBmcm9tICdsb2Rhc2gucGljayc7CnZhciBzdGF0dXNNYXAgPSB7fTsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdUU3lzU2VyaWFsTnVtYmVyTW9kYWwnLAogIHByb3BzOiB7fSwKICBjb21wb25lbnRzOiB7fSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdmlzaWJsZTogZmFsc2UsCiAgICAgIGxhYmVsQ29sOiB7CiAgICAgICAgeHM6IHsKICAgICAgICAgIHNwYW46IDI0CiAgICAgICAgfSwKICAgICAgICBzbTogewogICAgICAgICAgc3BhbjogNQogICAgICAgIH0KICAgICAgfSwKICAgICAgd3JhcHBlckNvbDogewogICAgICAgIHhzOiB7CiAgICAgICAgICBzcGFuOiAyNAogICAgICAgIH0sCiAgICAgICAgc206IHsKICAgICAgICAgIHNwYW46IDE2CiAgICAgICAgfQogICAgICB9LAogICAgICBjb25maXJtTG9hZGluZzogZmFsc2UsCiAgICAgIG1kbDoge30sCiAgICAgIGZvcm06IHRoaXMuJGZvcm0uY3JlYXRlRm9ybSh0aGlzKSwKICAgICAgZm9ybVZhbGlkYXRvclJ1bGVzOiB7CiAgICAgICAgbW9kZWxOYW1lOiBbewogICAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgICBtZXNzYWdlOiAn6K+36L6T5YWl5ZCN56ewJwogICAgICAgIH0sIHsKICAgICAgICAgIHZhbGlkYXRvcjogdGhpcy52YWxpZGF0b3JNb2RlbE5hbWUKICAgICAgICB9XSwKICAgICAgICBtb2RlbENvZGU6IFt7CiAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgIG1lc3NhZ2U6ICfor7fovpPlhaXnvJblj7cnCiAgICAgICAgfSwgewogICAgICAgICAgdmFsaWRhdG9yOiB0aGlzLnZhbGlkYXRvck1vZGVsQ29kZQogICAgICAgIH1dCiAgICAgIH0sCiAgICAgIHN0YXR1c0Fycnk6IFtdCiAgICB9OwogIH0sCiAgYmVmb3JlQ3JlYXRlOiBmdW5jdGlvbiBiZWZvcmVDcmVhdGUoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gZ2V0RGljdEFycmF5KCdzeXNfbm9ybWFsX2Rpc2FibGUnKTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICBfdGhpcy5zdGF0dXNBcnJ5ID0gX2NvbnRleHQuc2VudDsKCiAgICAgICAgICAgICAgX3RoaXMuc3RhdHVzQXJyeS5tYXAoZnVuY3Rpb24gKGQpIHsKICAgICAgICAgICAgICAgIHN0YXR1c01hcFtkLmRpY3RWYWx1ZV0gPSB7CiAgICAgICAgICAgICAgICAgIHRleHQ6IGQuZGljdExhYmVsCiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKSgpOwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHt9LAogIG1ldGhvZHM6IHsKICAgIGFkZDogZnVuY3Rpb24gYWRkKCkgewogICAgICB0aGlzLmZvcm0ucmVzZXRGaWVsZHMoKTsKICAgICAgdGhpcy5lZGl0KHsKICAgICAgICBpZDogMAogICAgICB9KTsKICAgIH0sCiAgICBlZGl0OiBmdW5jdGlvbiBlZGl0KHJlY29yZCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHRoaXMubWRsID0gT2JqZWN0LmFzc2lnbihyZWNvcmQpOwogICAgICB0aGlzLnZpc2libGUgPSB0cnVlOwogICAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7CiAgICAgICAgX3RoaXMyLmZvcm0uc2V0RmllbGRzVmFsdWUocGljayhfdGhpczIubWRsLCAnaWQnLCAnbW9kZWxOYW1lJywgJ21vZGVsQ29kZScsICdjb25maWdUZW1wbGV0JywgJ21heFNlcmlhbCcsICdwcmVNYXhOdW0nLCAnYXV0b0luY3JlbWVudEZsYWcnLCAncmVtYXJrJykpOwogICAgICB9KTsKICAgIH0sCiAgICBoYW5kbGVTdWJtaXQ6IGZ1bmN0aW9uIGhhbmRsZVN1Ym1pdChlKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpOwogICAgICB0aGlzLmZvcm0udmFsaWRhdGVGaWVsZHMoZnVuY3Rpb24gKGVyciwgdmFsdWVzKSB7CiAgICAgICAgaWYgKCFlcnIpIHsKICAgICAgICAgIF90aGlzMy5jb25maXJtTG9hZGluZyA9IHRydWU7CiAgICAgICAgICBzYXZlVFN5c1NlcmlhbE51bWJlcih2YWx1ZXMpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgICBpZiAocmVzLmNvZGUgPT09IDApIHsKICAgICAgICAgICAgICBfdGhpczMuJG1lc3NhZ2Uuc3VjY2Vzcygn5L+d5a2Y5oiQ5YqfJyk7CgogICAgICAgICAgICAgIF90aGlzMy4kZW1pdCgnb2snKTsKCiAgICAgICAgICAgICAgX3RoaXMzLnZpc2libGUgPSBmYWxzZTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICBfdGhpczMuJG1lc3NhZ2UuZXJyb3IocmVzLm1zZyk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgX3RoaXMzLiRtZXNzYWdlLmVycm9yKCfns7vnu5/plJnor6/vvIzor7fnqI3lkI7lho3or5UnKTsKICAgICAgICAgIH0pLmZpbmFsbHkoZnVuY3Rpb24gKCkgewogICAgICAgICAgICBfdGhpczMuY29uZmlybUxvYWRpbmcgPSBmYWxzZTsKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgdmFsaWRhdG9yTW9kZWxOYW1lOiBmdW5jdGlvbiB2YWxpZGF0b3JNb2RlbE5hbWUocnVsZSwgdmFsdWUsIGNhbGxiYWNrKSB7CiAgICAgIHZhciBfdGhpczQgPSB0aGlzOwoKICAgICAgdmFyIGlkID0gdGhpcy5mb3JtLmdldEZpZWxkVmFsdWUoJ2lkJyk7CiAgICAgIHZhciBlcnJvcnMgPSBbXTsKCiAgICAgIGlmICh2YWx1ZSAmJiB2YWx1ZSAhPT0gJycpIHsKICAgICAgICB1bmlxdWVUU3lzU2VyaWFsTnVtYmVyKHsKICAgICAgICAgIGlkVmFsdWU6IGlkLAogICAgICAgICAgY29sTmFtZTogJ21vZGVsX25hbWUnLAogICAgICAgICAgY29sVmFsdWU6IHZhbHVlCiAgICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICBpZiAocmVzLmNvZGUgIT09IDApIHsKICAgICAgICAgICAgZXJyb3JzLnB1c2godmFsdWUgKyAn5bey5a2Y5ZyoJyk7CiAgICAgICAgICB9CgogICAgICAgICAgY2FsbGJhY2soZXJyb3JzKTsKICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoKSB7CiAgICAgICAgICBfdGhpczQuJG1lc3NhZ2UuZXJyb3IoJ+ezu+e7n+mUmeivr++8jOivt+eojeWQjuWGjeivlScpOwogICAgICAgIH0pLmZpbmFsbHkoZnVuY3Rpb24gKCkgewogICAgICAgICAgX3RoaXM0LmNvbmZpcm1Mb2FkaW5nID0gZmFsc2U7CiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIGVycm9yczsKICAgICAgfQogICAgfSwKICAgIHZhbGlkYXRvck1vZGVsQ29kZTogZnVuY3Rpb24gdmFsaWRhdG9yTW9kZWxDb2RlKHJ1bGUsIHZhbHVlLCBjYWxsYmFjaykgewogICAgICB2YXIgX3RoaXM1ID0gdGhpczsKCiAgICAgIHZhciBpZCA9IHRoaXMuZm9ybS5nZXRGaWVsZFZhbHVlKCdpZCcpOwogICAgICB2YXIgZXJyb3JzID0gW107CgogICAgICBpZiAodmFsdWUgJiYgdmFsdWUgIT09ICcnKSB7CiAgICAgICAgdW5pcXVlVFN5c1NlcmlhbE51bWJlcih7CiAgICAgICAgICBpZFZhbHVlOiBpZCwKICAgICAgICAgIGNvbE5hbWU6ICdtb2RlbF9jb2RlJywKICAgICAgICAgIGNvbFZhbHVlOiB2YWx1ZQogICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgaWYgKHJlcy5jb2RlICE9PSAwKSB7CiAgICAgICAgICAgIGVycm9ycy5wdXNoKHZhbHVlICsgJ+W3suWtmOWcqCcpOwogICAgICAgICAgfQoKICAgICAgICAgIGNhbGxiYWNrKGVycm9ycyk7CiAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKCkgewogICAgICAgICAgX3RoaXM1LiRtZXNzYWdlLmVycm9yKCfns7vnu5/plJnor6/vvIzor7fnqI3lkI7lho3or5UnKTsKCiAgICAgICAgICBlcnJvcnMucHVzaCgn57O757uf6ZSZ6K+v77yM6K+356iN5ZCO5YaN6K+VJyk7CiAgICAgICAgICBjYWxsYmFjayhlcnJvcnMpOwogICAgICAgIH0pLmZpbmFsbHkoZnVuY3Rpb24gKCkgewogICAgICAgICAgX3RoaXM1LmNvbmZpcm1Mb2FkaW5nID0gZmFsc2U7CiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgY2FsbGJhY2soKTsKICAgICAgfQogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIC8qCiAgICAgICdzZWxlY3RlZFJvd3MnOiBmdW5jdGlvbiAoc2VsZWN0ZWRSb3dzKSB7CiAgICAgICAgdGhpcy5uZWVkVG90YWxMaXN0ID0gdGhpcy5uZWVkVG90YWxMaXN0Lm1hcChpdGVtID0+IHsKICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIC4uLml0ZW0sCiAgICAgICAgICAgIHRvdGFsOiBzZWxlY3RlZFJvd3MucmVkdWNlKCAoc3VtLCB2YWwpID0+IHsKICAgICAgICAgICAgICByZXR1cm4gc3VtICsgdmFsW2l0ZW0uZGF0YUluZGV4XQogICAgICAgICAgICB9LCAwKQogICAgICAgICAgfQogICAgICAgIH0pCiAgICAgIH0KICAgICAgKi8KICB9Cn07"},{"version":3,"sources":["TSysSerialNumberModal.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <a-modal title=\"操作\"\n           style=\"top: 20px;\"\n           :width=\"500\"\n           v-model=\"visible\"\n           :confirmLoading=\"confirmLoading\"\n           @ok=\"handleSubmit\">\n    <a-form :form=\"form\">\n      <div class=\"modal-divider-text\">基本配置</div>\n      <a-form-item style=\"display:none\">\n        <a-input v-decorator=\"['id']\" />\n      </a-form-item>\n      <a-form-item :labelCol=\"labelCol\"\n                   :wrapperCol=\"wrapperCol\"\n                   label=\"模块名称\">\n        <a-input placeholder=\"模块名称\"\n                 v-decorator=\"['modelName',{rules: formValidatorRules.modelName}]\" />\n      </a-form-item>\n      <a-form-item :labelCol=\"labelCol\"\n                   :wrapperCol=\"wrapperCol\"\n                   label=\"模块代码\">\n        <a-input placeholder=\"模块代码\"\n                 v-decorator=\"['modelCode',{rules: formValidatorRules.modelCode}]\" />\n      </a-form-item>\n      <a-form-item :labelCol=\"labelCol\"\n                   :wrapperCol=\"wrapperCol\"\n                   label=\"参数模版\">\n        <a-input placeholder=\"参数模版\"\n                 v-decorator=\"['configTemplet',{rules: [{ required: true, message: '请输入参数模版' }]}]\" />\n      </a-form-item>\n      <a-form-item :labelCol=\"labelCol\"\n                   :wrapperCol=\"wrapperCol\"\n                   label=\"当前最大值\">\n        <a-input-number placeholder=\"当前最大值\"\n                        v-decorator=\"['maxSerial',{rules: [{ required: true, message: '请输入当前最大值' }]}]\"\n                        :min=\"1\"\n                        style=\"width: 200px\"\n                        :max=\"1000000\" />\n\n      </a-form-item>\n      <a-form-item :labelCol=\"labelCol\"\n                   :wrapperCol=\"wrapperCol\"\n                   label=\"缓存个数\">\n\n        <a-input-number placeholder=\"缓存个数\"\n                        v-decorator=\"['preMaxNum',{rules: [{ required: true, message: '请输入缓存个数' }]}]\"\n                        :min=\"1\"\n                        style=\"width: 200px\"\n                        :max=\"1000000\" />\n      </a-form-item>\n      <a-form-item :labelCol=\"labelCol\"\n                   :wrapperCol=\"wrapperCol\"\n                   label=\"自增标识\">\n        <a-input-number placeholder=\"自增标识\"\n                        v-decorator=\"['autoIncrementFlag',{rules: [{ required: true, message: '请输入自增标识' }]}]\"\n                        :min=\"1\"\n                        style=\"width: 200px\"\n                        :max=\"1000000\" />\n      </a-form-item>\n      <a-form-item :labelCol=\"labelCol\"\n                   :wrapperCol=\"wrapperCol\"\n                   label=\"状态\">\n        <a-select v-decorator=\"['status', {initialValue:'0',rules: [{ required: true, message: '请选择状态' }]}]\">\n          <a-select-option v-for=\"(b, index) in statusArry\"\n                           :key=\"index\"\n                           :value=\"b.dictValue\">{{ b.dictLabel }}</a-select-option>\n        </a-select>\n      </a-form-item>\n      <a-form-item :labelCol=\"labelCol\"\n                   :wrapperCol=\"wrapperCol\"\n                   label=\"备注\">\n        <a-textarea :rows=\"5\"\n                    placeholder=\"...\"\n                    v-decorator=\"['remark',{rules: [{ required: false, message: '请输入备注' }]}]\" />\n      </a-form-item>\n    </a-form>\n  </a-modal>\n</template>\n<script>\nimport { saveTSysSerialNumber, uniqueTSysSerialNumber } from '@/api/pts/sys/TSysSerialNumber'\nimport { getDictArray } from '@/utils/dict'\nimport pick from 'lodash.pick'\nconst statusMap = {}\nexport default {\n  name: 'TSysSerialNumberModal',\n  props: {},\n  components: {},\n  data () {\n    return {\n      visible: false,\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      },\n      confirmLoading: false,\n      mdl: {},\n      form: this.$form.createForm(this),\n      formValidatorRules: {\n        modelName: [{ required: true, message: '请输入名称' }, { validator: this.validatorModelName }],\n        modelCode: [{ required: true, message: '请输入编号' }, { validator: this.validatorModelCode }]\n      },\n      statusArry: []\n    }\n  },\n  async beforeCreate () {\n    this.statusArry = await getDictArray('sys_normal_disable')\n    this.statusArry.map(d => {\n      statusMap[d.dictValue] = { text: d.dictLabel }\n    })\n  },\n  created () {\n  },\n  methods: {\n    add () {\n      this.form.resetFields()\n      this.edit({ id: 0 })\n    },\n    edit (record) {\n      this.mdl = Object.assign(record)\n      this.visible = true\n      this.$nextTick(() => {\n        this.form.setFieldsValue(\n          pick(\n            this.mdl,\n            'id',\n            'modelName',\n            'modelCode',\n            'configTemplet',\n            'maxSerial',\n            'preMaxNum',\n            'autoIncrementFlag',\n            'remark'\n          )\n        )\n      })\n    },\n    handleSubmit (e) {\n      e.preventDefault()\n      this.form.validateFields((err, values) => {\n        if (!err) {\n          this.confirmLoading = true\n          saveTSysSerialNumber(values)\n            .then(res => {\n              if (res.code === 0) {\n                this.$message.success('保存成功')\n                this.$emit('ok')\n                this.visible = false\n              } else {\n                this.$message.error(res.msg)\n              }\n            })\n            .catch(() => {\n              this.$message.error('系统错误，请稍后再试')\n            })\n            .finally(() => {\n              this.confirmLoading = false\n            })\n        }\n      })\n    },\n    validatorModelName (rule, value, callback) {\n      const id = this.form.getFieldValue('id')\n      const errors = []\n      if (value && value !== '') {\n        uniqueTSysSerialNumber({ idValue: id, colName: 'model_name', colValue: value })\n          .then(res => {\n            if (res.code !== 0) {\n              errors.push(value + '已存在')\n            }\n            callback(errors)\n          })\n          .catch(() => {\n            this.$message.error('系统错误，请稍后再试')\n          })\n          .finally(() => {\n            this.confirmLoading = false\n          })\n      } else {\n        return errors\n      }\n    },\n    validatorModelCode (rule, value, callback) {\n      const id = this.form.getFieldValue('id')\n      const errors = []\n      if (value && value !== '') {\n        uniqueTSysSerialNumber({ idValue: id, colName: 'model_code', colValue: value })\n          .then(res => {\n            if (res.code !== 0) {\n              errors.push(value + '已存在')\n            }\n            callback(errors)\n          })\n          .catch(() => {\n            this.$message.error('系统错误，请稍后再试')\n\t\t\terrors.push('系统错误，请稍后再试')\n            callback(errors)\n          })\n          .finally(() => {\n            this.confirmLoading = false\n          })\n      } else {\n        callback()\n      }\n    }\n  },\n  watch: {\n    /*\n      'selectedRows': function (selectedRows) {\n        this.needTotalList = this.needTotalList.map(item => {\n          return {\n            ...item,\n            total: selectedRows.reduce( (sum, val) => {\n              return sum + val[item.dataIndex]\n            }, 0)\n          }\n        })\n      }\n      */\n  }\n}\n</script>\n"],"sourceRoot":"src/views/pts/sys/modules"}]}