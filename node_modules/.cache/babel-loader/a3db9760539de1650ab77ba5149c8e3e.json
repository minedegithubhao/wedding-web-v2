{"remainingRequest":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/babel-loader/lib/index.js!/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/src/components/Ellipsis/Ellipsis.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/src/components/Ellipsis/Ellipsis.vue","mtime":1605568762401},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3RvciI7CmltcG9ydCB7IFRvb2x0aXAgfSBmcm9tICdhbnQtZGVzaWduLXZ1ZSc7CmltcG9ydCB7IGN1dFN0ckJ5RnVsbExlbmd0aCwgZ2V0U3RyRnVsbExlbmd0aCB9IGZyb20gJ0AvY29tcG9uZW50cy9fdXRpbC91dGlsJzsKLyoKICAgIGNvbnN0IGlzU3VwcG9ydExpbmVDbGFtcCA9IGRvY3VtZW50LmJvZHkuc3R5bGUud2Via2l0TGluZUNsYW1wICE9PSB1bmRlZmluZWQ7CgogICAgY29uc3QgVG9vbHRpcE92ZXJsYXlTdHlsZSA9IHsKICAgICAgb3ZlcmZsb3dXcmFwOiAnYnJlYWstd29yZCcsCiAgICAgIHdvcmRXcmFwOiAnYnJlYWstd29yZCcsCiAgICB9OwogICovCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0VsbGlwc2lzJywKICBjb21wb25lbnRzOiB7CiAgICBUb29sdGlwOiBUb29sdGlwCiAgfSwKICBwcm9wczogewogICAgcHJlZml4Q2xzOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJ2FudC1wcm8tZWxsaXBzaXMnCiAgICB9LAogICAgdG9vbHRpcDogewogICAgICB0eXBlOiBCb29sZWFuCiAgICB9LAogICAgbGVuZ3RoOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0sCiAgICBsaW5lczogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDEKICAgIH0sCiAgICBmdWxsV2lkdGhSZWNvZ25pdGlvbjogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgZ2V0U3RyRG9tOiBmdW5jdGlvbiBnZXRTdHJEb20oc3RyLCBmdWxsTGVuZ3RoKSB7CiAgICAgIHZhciBoID0gdGhpcy4kY3JlYXRlRWxlbWVudDsKICAgICAgcmV0dXJuIGgoInNwYW4iLCBbY3V0U3RyQnlGdWxsTGVuZ3RoKHN0ciwgdGhpcy5sZW5ndGgpICsgKGZ1bGxMZW5ndGggPiB0aGlzLmxlbmd0aCA/ICcuLi4nIDogJycpXSk7CiAgICB9LAogICAgZ2V0VG9vbHRpcDogZnVuY3Rpb24gZ2V0VG9vbHRpcChmdWxsU3RyLCBmdWxsTGVuZ3RoKSB7CiAgICAgIHZhciBoID0gdGhpcy4kY3JlYXRlRWxlbWVudDsKICAgICAgcmV0dXJuIGgoVG9vbHRpcCwgW2goInRlbXBsYXRlIiwgewogICAgICAgICJzbG90IjogInRpdGxlIgogICAgICB9LCBbZnVsbFN0cl0pLCB0aGlzLmdldFN0ckRvbShmdWxsU3RyLCBmdWxsTGVuZ3RoKV0pOwogICAgfQogIH0sCiAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoKSB7CiAgICB2YXIgX3RoaXMkJHByb3BzID0gdGhpcy4kcHJvcHMsCiAgICAgICAgdG9vbHRpcCA9IF90aGlzJCRwcm9wcy50b29sdGlwLAogICAgICAgIGxlbmd0aCA9IF90aGlzJCRwcm9wcy5sZW5ndGg7CiAgICB2YXIgc3RyID0gdGhpcy4kc2xvdHMuZGVmYXVsdC5tYXAoZnVuY3Rpb24gKHZOb2RlKSB7CiAgICAgIHJldHVybiB2Tm9kZS50ZXh0OwogICAgfSkuam9pbignJyk7CiAgICB2YXIgZnVsbExlbmd0aCA9IGdldFN0ckZ1bGxMZW5ndGgoc3RyKTsKICAgIHZhciBzdHJEb20gPSB0b29sdGlwICYmIGZ1bGxMZW5ndGggPiBsZW5ndGggPyB0aGlzLmdldFRvb2x0aXAoc3RyLCBmdWxsTGVuZ3RoKSA6IHRoaXMuZ2V0U3RyRG9tKHN0ciwgZnVsbExlbmd0aCk7CiAgICByZXR1cm4gc3RyRG9tOwogIH0KfTs="},{"version":3,"sources":["Ellipsis.vue"],"names":[],"mappings":";;;AACA,SAAA,OAAA,QAAA,gBAAA;AACA,SAAA,kBAAA,EAAA,gBAAA,QAAA,yBAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,OAAA,EAAA;AADA,GAFA;AAKA,EAAA,KAAA,EAAA;AACA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KALA;AAQA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA,KARA;AAYA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAZA;AAgBA,IAAA,oBAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA;AAhBA,GALA;AA0BA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,qBACA,GADA,EACA,UADA,EACA;AAAA;AACA,wBACA,kBAAA,CAAA,GAAA,EAAA,KAAA,MAAA,CAAA,IAAA,UAAA,GAAA,KAAA,MAAA,GAAA,KAAA,GAAA,EAAA,CADA;AAGA,KALA;AAMA,IAAA,UANA,sBAMA,OANA,EAMA,UANA,EAMA;AAAA;AACA;AAAA,gBAEA;AAFA,UAEA,OAFA,IAGA,KAAA,SAAA,CAAA,OAAA,EAAA,UAAA,CAHA;AAMA;AAbA,GA1BA;AAyCA,EAAA,MAzCA,oBAyCA;AAAA,uBACA,KAAA,MADA;AAAA,QACA,OADA,gBACA,OADA;AAAA,QACA,MADA,gBACA,MADA;AAEA,QAAA,GAAA,GAAA,KAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,UAAA,KAAA;AAAA,aAAA,KAAA,CAAA,IAAA;AAAA,KAAA,EAAA,IAAA,CAAA,EAAA,CAAA;AACA,QAAA,UAAA,GAAA,gBAAA,CAAA,GAAA,CAAA;AACA,QAAA,MAAA,GAAA,OAAA,IAAA,UAAA,GAAA,MAAA,GAAA,KAAA,UAAA,CAAA,GAAA,EAAA,UAAA,CAAA,GAAA,KAAA,SAAA,CAAA,GAAA,EAAA,UAAA,CAAA;AACA,WACA,MADA;AAGA;AAjDA,CAAA","sourcesContent":["<script>\nimport { Tooltip } from 'ant-design-vue'\nimport { cutStrByFullLength, getStrFullLength } from '@/components/_util/util'\n/*\n    const isSupportLineClamp = document.body.style.webkitLineClamp !== undefined;\n\n    const TooltipOverlayStyle = {\n      overflowWrap: 'break-word',\n      wordWrap: 'break-word',\n    };\n  */\n\nexport default {\n  name: 'Ellipsis',\n  components: {\n    Tooltip\n  },\n  props: {\n    prefixCls: {\n      type: String,\n      default: 'ant-pro-ellipsis'\n    },\n    tooltip: {\n      type: Boolean\n    },\n    length: {\n      type: Number,\n      required: true\n    },\n    lines: {\n      type: Number,\n      default: 1\n    },\n    fullWidthRecognition: {\n      type: Boolean,\n      default: false\n    }\n  },\n  methods: {\n    getStrDom (str, fullLength) {\n      return (\n        <span>{ cutStrByFullLength(str, this.length) + (fullLength > this.length ? '...' : '') }</span>\n      )\n    },\n    getTooltip (fullStr, fullLength) {\n      return (\n        <Tooltip>\n          <template slot=\"title\">{ fullStr }</template>\n          { this.getStrDom(fullStr, fullLength) }\n        </Tooltip>\n      )\n    }\n  },\n  render () {\n    const { tooltip, length } = this.$props\n    const str = this.$slots.default.map(vNode => vNode.text).join('')\n    const fullLength = getStrFullLength(str)\n    const strDom = tooltip && fullLength > length ? this.getTooltip(str, fullLength) : this.getStrDom(str, fullLength)\n    return (\n      strDom\n    )\n  }\n}\n</script>\n"],"sourceRoot":"src/components/Ellipsis"}]}