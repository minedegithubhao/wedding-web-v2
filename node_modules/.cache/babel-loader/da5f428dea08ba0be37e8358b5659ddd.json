{"remainingRequest":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/babel-loader/lib/index.js!/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/eslint-loader/index.js??ref--13-0!/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/src/utils/routeConvert.js","dependencies":[{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/src/utils/routeConvert.js","mtime":1605568762443},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnN0YXJ0cy13aXRoIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaCI7CmltcG9ydCBjbG9uZURlZXAgZnJvbSAnbG9kYXNoLmNsb25lZGVlcCc7CmV4cG9ydCBmdW5jdGlvbiBjb252ZXJ0Um91dGVzKG5vZGVzKSB7CiAgaWYgKCFub2RlcykgcmV0dXJuIG51bGw7CiAgbm9kZXMgPSBjbG9uZURlZXAobm9kZXMpOwogIHZhciBxdWV1ZSA9IEFycmF5LmlzQXJyYXkobm9kZXMpID8gbm9kZXMuY29uY2F0KCkgOiBbbm9kZXNdOwoKICB3aGlsZSAocXVldWUubGVuZ3RoKSB7CiAgICB2YXIgbGV2ZWxTaXplID0gcXVldWUubGVuZ3RoOwoKICAgIHZhciBfbG9vcCA9IGZ1bmN0aW9uIF9sb29wKGkpIHsKICAgICAgdmFyIG5vZGUgPSBxdWV1ZS5zaGlmdCgpOwogICAgICBpZiAoIW5vZGUuY2hpbGRyZW4gfHwgIW5vZGUuY2hpbGRyZW4ubGVuZ3RoKSByZXR1cm4gImNvbnRpbnVlIjsKICAgICAgbm9kZS5jaGlsZHJlbi5mb3JFYWNoKGZ1bmN0aW9uIChjaGlsZCkgewogICAgICAgIC8vIOi9rOWMluebuOWvuei3r+W+hAogICAgICAgIGlmIChjaGlsZC5wYXRoWzBdICE9PSAnLycgJiYgIWNoaWxkLnBhdGguc3RhcnRzV2l0aCgnaHR0cCcpKSB7CiAgICAgICAgICBjaGlsZC5wYXRoID0gbm9kZS5wYXRoLnJlcGxhY2UoLyhcdyopWy9dKiQvLCAiJDEvIi5jb25jYXQoY2hpbGQucGF0aCkpOwogICAgICAgIH0KICAgICAgfSk7CiAgICAgIHF1ZXVlID0gcXVldWUuY29uY2F0KG5vZGUuY2hpbGRyZW4pOwogICAgfTsKCiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxldmVsU2l6ZTsgaSsrKSB7CiAgICAgIHZhciBfcmV0ID0gX2xvb3AoaSk7CgogICAgICBpZiAoX3JldCA9PT0gImNvbnRpbnVlIikgY29udGludWU7CiAgICB9CiAgfQoKICByZXR1cm4gbm9kZXM7Cn0="},{"version":3,"sources":["/Users/cxdpc/WorkSpaces/idea_workspace/wedding-web/src/utils/routeConvert.js"],"names":["cloneDeep","convertRoutes","nodes","queue","Array","isArray","concat","length","levelSize","i","node","shift","children","forEach","child","path","startsWith","replace"],"mappings":";;;;;;AAAA,OAAOA,SAAP,MAAsB,kBAAtB;AAEA,OAAO,SAASC,aAAT,CAAwBC,KAAxB,EAA+B;AACpC,MAAI,CAACA,KAAL,EAAY,OAAO,IAAP;AAEZA,EAAAA,KAAK,GAAGF,SAAS,CAACE,KAAD,CAAjB;AAEA,MAAIC,KAAK,GAAGC,KAAK,CAACC,OAAN,CAAcH,KAAd,IAAuBA,KAAK,CAACI,MAAN,EAAvB,GAAwC,CAACJ,KAAD,CAApD;;AAEA,SAAOC,KAAK,CAACI,MAAb,EAAqB;AACnB,QAAMC,SAAS,GAAGL,KAAK,CAACI,MAAxB;;AADmB,+BAGVE,CAHU;AAIjB,UAAMC,IAAI,GAAGP,KAAK,CAACQ,KAAN,EAAb;AAEA,UAAI,CAACD,IAAI,CAACE,QAAN,IAAkB,CAACF,IAAI,CAACE,QAAL,CAAcL,MAArC,EAA6C;AAE7CG,MAAAA,IAAI,CAACE,QAAL,CAAcC,OAAd,CAAsB,UAAAC,KAAK,EAAI;AAC7B;AACA,YAAIA,KAAK,CAACC,IAAN,CAAW,CAAX,MAAkB,GAAlB,IAAyB,CAACD,KAAK,CAACC,IAAN,CAAWC,UAAX,CAAsB,MAAtB,CAA9B,EAA6D;AAC3DF,UAAAA,KAAK,CAACC,IAAN,GAAaL,IAAI,CAACK,IAAL,CAAUE,OAAV,CAAkB,YAAlB,eAAsCH,KAAK,CAACC,IAA5C,EAAb;AACD;AACF,OALD;AAOAZ,MAAAA,KAAK,GAAGA,KAAK,CAACG,MAAN,CAAaI,IAAI,CAACE,QAAlB,CAAR;AAfiB;;AAGnB,SAAK,IAAIH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,SAApB,EAA+BC,CAAC,EAAhC,EAAoC;AAAA,uBAA3BA,CAA2B;;AAAA,+BAGW;AAU9C;AACF;;AAED,SAAOP,KAAP;AACD","sourcesContent":["import cloneDeep from 'lodash.clonedeep'\n\nexport function convertRoutes (nodes) {\n  if (!nodes) return null\n\n  nodes = cloneDeep(nodes)\n\n  let queue = Array.isArray(nodes) ? nodes.concat() : [nodes]\n\n  while (queue.length) {\n    const levelSize = queue.length\n\n    for (let i = 0; i < levelSize; i++) {\n      const node = queue.shift()\n\n      if (!node.children || !node.children.length) continue\n\n      node.children.forEach(child => {\n        // 转化相对路径\n        if (child.path[0] !== '/' && !child.path.startsWith('http')) {\n          child.path = node.path.replace(/(\\w*)[/]*$/, `$1/${child.path}`)\n        }\n      })\n\n      queue = queue.concat(node.children)\n    }\n  }\n\n  return nodes\n}\n"]}]}