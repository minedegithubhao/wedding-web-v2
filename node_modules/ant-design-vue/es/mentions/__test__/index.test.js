import { mount } from '@vue/test-utils';
import Vue from 'vue';
import Mentions from '..';
import { asyncExpect } from '@/tests/utils';
import focusTest from '../../../tests/shared/focusTest';

var getMentions = Mentions.getMentions;


function $$(className) {
  return document.body.querySelectorAll(className);
}

function triggerInput(wrapper) {
  var text = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';

  wrapper.find('textarea').element.value = text;
  wrapper.find('textarea').element.selectionStart = text.length;
  wrapper.find('textarea').trigger('keydown');
  wrapper.find('textarea').trigger('change');
  wrapper.find('textarea').trigger('keyup');
}

describe('Mentions', function () {
  beforeAll(function () {
    jest.useFakeTimers();
  });

  afterAll(function () {
    jest.useRealTimers();
  });

  it('getMentions', function () {
    var mentions = getMentions('@light #bamboo cat', { prefix: ['@', '#'] });
    expect(mentions).toEqual([{
      prefix: '@',
      value: 'light'
    }, {
      prefix: '#',
      value: 'bamboo'
    }]);
  });

  it('focus', function () {
    var onFocus = jest.fn();
    var onBlur = jest.fn();

    var wrapper = mount({
      render: function render() {
        var h = arguments[0];

        return h(Mentions, {
          on: {
            'focus': onFocus,
            'blur': onBlur
          }
        });
      }
    });
    wrapper.find('textarea').trigger('focus');
    expect(wrapper.find('.ant-mentions').classes('ant-mentions-focused')).toBeTruthy();
    expect(onFocus).toHaveBeenCalled();

    wrapper.find('textarea').trigger('blur');
    jest.runAllTimers();
    expect(wrapper.classes()).not.toContain('ant-mentions-focused');
    expect(onBlur).toHaveBeenCalled();
  });

  it('loading', function (done) {
    var wrapper = mount({
      render: function render() {
        var h = arguments[0];

        return h(Mentions, {
          attrs: { loading: true }
        });
      }
    }, { sync: false });
    triggerInput(wrapper, '@');
    Vue.nextTick(function () {
      mount({
        render: function render() {
          return wrapper.find({ name: 'Trigger' }).vm.getComponent();
        }
      }, { sync: false });
      Vue.nextTick(function () {
        expect($$('.ant-mentions-dropdown-menu-item').length).toBeTruthy();
        expect($$('.ant-spin')).toBeTruthy();
        done();
      });
    });
  });

  focusTest(Mentions);
});